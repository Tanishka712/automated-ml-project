2025-06-22 16:52:54,960:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-22 16:52:54,960:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-22 16:52:54,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-22 16:52:54,961:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-22 16:54:19,522:INFO:PyCaret ClassificationExperiment
2025-06-22 16:54:19,522:INFO:Logging name: clf-default-name
2025-06-22 16:54:19,522:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-22 16:54:19,522:INFO:version 3.3.2
2025-06-22 16:54:19,523:INFO:Initializing setup()
2025-06-22 16:54:19,523:INFO:self.USI: 3714
2025-06-22 16:54:19,523:INFO:self._variable_keys: {'y_test', 'seed', 'exp_id', 'fold_groups_param', 'exp_name_log', 'is_multiclass', 'gpu_param', 'target_param', 'y', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'pipeline', 'memory', 'html_param', 'USI', 'X', 'fold_shuffle_param', 'logging_param', '_ml_usecase', '_available_plots', 'X_test', 'y_train', 'fold_generator', 'idx', 'log_plots_param', 'X_train', 'fix_imbalance'}
2025-06-22 16:54:19,523:INFO:Checking environment
2025-06-22 16:54:19,523:INFO:python_version: 3.10.11
2025-06-22 16:54:19,523:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-22 16:54:19,523:INFO:machine: AMD64
2025-06-22 16:54:19,546:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-22 16:54:19,554:INFO:Memory: svmem(total=16312721408, available=3814551552, percent=76.6, used=12498169856, free=3814551552)
2025-06-22 16:54:19,554:INFO:Physical Core: 6
2025-06-22 16:54:19,554:INFO:Logical Core: 12
2025-06-22 16:54:19,554:INFO:Checking libraries
2025-06-22 16:54:19,554:INFO:System:
2025-06-22 16:54:19,554:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-22 16:54:19,554:INFO:executable: C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\Scripts\python.exe
2025-06-22 16:54:19,554:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-22 16:54:19,554:INFO:PyCaret required dependencies:
2025-06-22 16:54:21,423:INFO:                 pip: 23.0.1
2025-06-22 16:54:21,423:INFO:          setuptools: 65.5.0
2025-06-22 16:54:21,423:INFO:             pycaret: 3.3.2
2025-06-22 16:54:21,423:INFO:             IPython: 8.37.0
2025-06-22 16:54:21,423:INFO:          ipywidgets: 8.1.7
2025-06-22 16:54:21,423:INFO:                tqdm: 4.67.1
2025-06-22 16:54:21,423:INFO:               numpy: 1.23.5
2025-06-22 16:54:21,423:INFO:              pandas: 2.0.3
2025-06-22 16:54:21,423:INFO:              jinja2: 3.1.6
2025-06-22 16:54:21,423:INFO:               scipy: 1.11.4
2025-06-22 16:54:21,423:INFO:              joblib: 1.3.2
2025-06-22 16:54:21,423:INFO:             sklearn: 1.4.2
2025-06-22 16:54:21,423:INFO:                pyod: 2.0.5
2025-06-22 16:54:21,423:INFO:            imblearn: 0.13.0
2025-06-22 16:54:21,423:INFO:   category_encoders: 2.7.0
2025-06-22 16:54:21,423:INFO:            lightgbm: 4.6.0
2025-06-22 16:54:21,423:INFO:               numba: 0.56.4
2025-06-22 16:54:21,423:INFO:            requests: 2.32.4
2025-06-22 16:54:21,423:INFO:          matplotlib: 3.5.3
2025-06-22 16:54:21,423:INFO:          scikitplot: 0.3.7
2025-06-22 16:54:21,423:INFO:         yellowbrick: 1.5
2025-06-22 16:54:21,423:INFO:              plotly: 5.24.1
2025-06-22 16:54:21,423:INFO:    plotly-resampler: Not installed
2025-06-22 16:54:21,423:INFO:             kaleido: 1.0.0
2025-06-22 16:54:21,423:INFO:           schemdraw: 0.15
2025-06-22 16:54:21,423:INFO:         statsmodels: 0.14.4
2025-06-22 16:54:21,423:INFO:              sktime: 0.26.0
2025-06-22 16:54:21,423:INFO:               tbats: 1.1.3
2025-06-22 16:54:21,423:INFO:            pmdarima: 2.0.4
2025-06-22 16:54:21,423:INFO:              psutil: 7.0.0
2025-06-22 16:54:21,423:INFO:          markupsafe: 3.0.2
2025-06-22 16:54:21,423:INFO:             pickle5: Not installed
2025-06-22 16:54:21,423:INFO:         cloudpickle: 3.1.1
2025-06-22 16:54:21,423:INFO:         deprecation: 2.1.0
2025-06-22 16:54:21,423:INFO:              xxhash: 3.5.0
2025-06-22 16:54:21,423:INFO:           wurlitzer: Not installed
2025-06-22 16:54:21,423:INFO:PyCaret optional dependencies:
2025-06-22 16:54:27,881:INFO:                shap: 0.44.1
2025-06-22 16:54:27,881:INFO:           interpret: 0.6.12
2025-06-22 16:54:27,882:INFO:                umap: 0.5.7
2025-06-22 16:54:27,882:INFO:     ydata_profiling: 4.16.1
2025-06-22 16:54:27,882:INFO:  explainerdashboard: 0.5.1
2025-06-22 16:54:27,882:INFO:             autoviz: Not installed
2025-06-22 16:54:27,882:INFO:           fairlearn: 0.7.0
2025-06-22 16:54:27,882:INFO:          deepchecks: Not installed
2025-06-22 16:54:27,882:INFO:             xgboost: 3.0.2
2025-06-22 16:54:27,882:INFO:            catboost: 1.2.8
2025-06-22 16:54:27,882:INFO:              kmodes: 0.12.2
2025-06-22 16:54:27,882:INFO:             mlxtend: 0.23.4
2025-06-22 16:54:27,882:INFO:       statsforecast: 1.5.0
2025-06-22 16:54:27,882:INFO:        tune_sklearn: Not installed
2025-06-22 16:54:27,882:INFO:                 ray: Not installed
2025-06-22 16:54:27,883:INFO:            hyperopt: 0.2.7
2025-06-22 16:54:27,883:INFO:              optuna: 4.4.0
2025-06-22 16:54:27,883:INFO:               skopt: 0.10.2
2025-06-22 16:54:27,883:INFO:              mlflow: 3.1.0
2025-06-22 16:54:27,883:INFO:              gradio: 5.34.2
2025-06-22 16:54:27,883:INFO:             fastapi: 0.115.13
2025-06-22 16:54:27,883:INFO:             uvicorn: 0.34.3
2025-06-22 16:54:27,883:INFO:              m2cgen: 0.10.0
2025-06-22 16:54:27,883:INFO:           evidently: 0.4.40
2025-06-22 16:54:27,883:INFO:               fugue: 0.8.7
2025-06-22 16:54:27,883:INFO:           streamlit: 1.46.0
2025-06-22 16:54:27,883:INFO:             prophet: Not installed
2025-06-22 16:54:27,883:INFO:None
2025-06-22 16:54:27,884:INFO:Set up data.
2025-06-22 16:54:27,900:INFO:Set up folding strategy.
2025-06-22 16:54:27,900:INFO:Set up train/test split.
2025-06-22 16:58:36,098:INFO:PyCaret ClassificationExperiment
2025-06-22 16:58:36,098:INFO:Logging name: clf-default-name
2025-06-22 16:58:36,098:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-22 16:58:36,098:INFO:version 3.3.2
2025-06-22 16:58:36,098:INFO:Initializing setup()
2025-06-22 16:58:36,098:INFO:self.USI: e7f4
2025-06-22 16:58:36,098:INFO:self._variable_keys: {'y_test', 'seed', 'exp_id', 'fold_groups_param', 'exp_name_log', 'is_multiclass', 'gpu_param', 'target_param', 'y', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'pipeline', 'memory', 'html_param', 'USI', 'X', 'fold_shuffle_param', 'logging_param', '_ml_usecase', '_available_plots', 'X_test', 'y_train', 'fold_generator', 'idx', 'log_plots_param', 'X_train', 'fix_imbalance'}
2025-06-22 16:58:36,098:INFO:Checking environment
2025-06-22 16:58:36,098:INFO:python_version: 3.10.11
2025-06-22 16:58:36,098:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-22 16:58:36,099:INFO:machine: AMD64
2025-06-22 16:58:36,099:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-22 16:58:36,105:INFO:Memory: svmem(total=16312721408, available=3501723648, percent=78.5, used=12810997760, free=3501723648)
2025-06-22 16:58:36,105:INFO:Physical Core: 6
2025-06-22 16:58:36,105:INFO:Logical Core: 12
2025-06-22 16:58:36,105:INFO:Checking libraries
2025-06-22 16:58:36,105:INFO:System:
2025-06-22 16:58:36,105:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-22 16:58:36,106:INFO:executable: C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\Scripts\python.exe
2025-06-22 16:58:36,106:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-22 16:58:36,106:INFO:PyCaret required dependencies:
2025-06-22 16:58:36,106:INFO:                 pip: 23.0.1
2025-06-22 16:58:36,106:INFO:          setuptools: 65.5.0
2025-06-22 16:58:36,106:INFO:             pycaret: 3.3.2
2025-06-22 16:58:36,106:INFO:             IPython: 8.37.0
2025-06-22 16:58:36,106:INFO:          ipywidgets: 8.1.7
2025-06-22 16:58:36,106:INFO:                tqdm: 4.67.1
2025-06-22 16:58:36,106:INFO:               numpy: 1.23.5
2025-06-22 16:58:36,106:INFO:              pandas: 2.0.3
2025-06-22 16:58:36,106:INFO:              jinja2: 3.1.6
2025-06-22 16:58:36,106:INFO:               scipy: 1.11.4
2025-06-22 16:58:36,106:INFO:              joblib: 1.3.2
2025-06-22 16:58:36,106:INFO:             sklearn: 1.4.2
2025-06-22 16:58:36,106:INFO:                pyod: 2.0.5
2025-06-22 16:58:36,106:INFO:            imblearn: 0.13.0
2025-06-22 16:58:36,106:INFO:   category_encoders: 2.7.0
2025-06-22 16:58:36,106:INFO:            lightgbm: 4.6.0
2025-06-22 16:58:36,106:INFO:               numba: 0.56.4
2025-06-22 16:58:36,106:INFO:            requests: 2.32.4
2025-06-22 16:58:36,106:INFO:          matplotlib: 3.5.3
2025-06-22 16:58:36,106:INFO:          scikitplot: 0.3.7
2025-06-22 16:58:36,106:INFO:         yellowbrick: 1.5
2025-06-22 16:58:36,106:INFO:              plotly: 5.24.1
2025-06-22 16:58:36,106:INFO:    plotly-resampler: Not installed
2025-06-22 16:58:36,106:INFO:             kaleido: 1.0.0
2025-06-22 16:58:36,106:INFO:           schemdraw: 0.15
2025-06-22 16:58:36,106:INFO:         statsmodels: 0.14.4
2025-06-22 16:58:36,106:INFO:              sktime: 0.26.0
2025-06-22 16:58:36,106:INFO:               tbats: 1.1.3
2025-06-22 16:58:36,106:INFO:            pmdarima: 2.0.4
2025-06-22 16:58:36,106:INFO:              psutil: 7.0.0
2025-06-22 16:58:36,106:INFO:          markupsafe: 3.0.2
2025-06-22 16:58:36,106:INFO:             pickle5: Not installed
2025-06-22 16:58:36,106:INFO:         cloudpickle: 3.1.1
2025-06-22 16:58:36,107:INFO:         deprecation: 2.1.0
2025-06-22 16:58:36,107:INFO:              xxhash: 3.5.0
2025-06-22 16:58:36,107:INFO:           wurlitzer: Not installed
2025-06-22 16:58:36,107:INFO:PyCaret optional dependencies:
2025-06-22 16:58:36,107:INFO:                shap: 0.44.1
2025-06-22 16:58:36,107:INFO:           interpret: 0.6.12
2025-06-22 16:58:36,107:INFO:                umap: 0.5.7
2025-06-22 16:58:36,107:INFO:     ydata_profiling: 4.16.1
2025-06-22 16:58:36,107:INFO:  explainerdashboard: 0.5.1
2025-06-22 16:58:36,107:INFO:             autoviz: Not installed
2025-06-22 16:58:36,107:INFO:           fairlearn: 0.7.0
2025-06-22 16:58:36,107:INFO:          deepchecks: Not installed
2025-06-22 16:58:36,107:INFO:             xgboost: 3.0.2
2025-06-22 16:58:36,107:INFO:            catboost: 1.2.8
2025-06-22 16:58:36,107:INFO:              kmodes: 0.12.2
2025-06-22 16:58:36,107:INFO:             mlxtend: 0.23.4
2025-06-22 16:58:36,107:INFO:       statsforecast: 1.5.0
2025-06-22 16:58:36,107:INFO:        tune_sklearn: Not installed
2025-06-22 16:58:36,107:INFO:                 ray: Not installed
2025-06-22 16:58:36,107:INFO:            hyperopt: 0.2.7
2025-06-22 16:58:36,107:INFO:              optuna: 4.4.0
2025-06-22 16:58:36,107:INFO:               skopt: 0.10.2
2025-06-22 16:58:36,107:INFO:              mlflow: 3.1.0
2025-06-22 16:58:36,107:INFO:              gradio: 5.34.2
2025-06-22 16:58:36,107:INFO:             fastapi: 0.115.13
2025-06-22 16:58:36,107:INFO:             uvicorn: 0.34.3
2025-06-22 16:58:36,107:INFO:              m2cgen: 0.10.0
2025-06-22 16:58:36,107:INFO:           evidently: 0.4.40
2025-06-22 16:58:36,107:INFO:               fugue: 0.8.7
2025-06-22 16:58:36,107:INFO:           streamlit: 1.46.0
2025-06-22 16:58:36,108:INFO:             prophet: Not installed
2025-06-22 16:58:36,108:INFO:None
2025-06-22 16:58:36,108:INFO:Set up data.
2025-06-22 16:58:36,114:INFO:Set up folding strategy.
2025-06-22 16:58:36,114:INFO:Set up train/test split.
2025-06-22 16:58:44,727:INFO:PyCaret ClassificationExperiment
2025-06-22 16:58:44,727:INFO:Logging name: clf-default-name
2025-06-22 16:58:44,727:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-22 16:58:44,727:INFO:version 3.3.2
2025-06-22 16:58:44,727:INFO:Initializing setup()
2025-06-22 16:58:44,727:INFO:self.USI: cdf8
2025-06-22 16:58:44,727:INFO:self._variable_keys: {'y_test', 'seed', 'exp_id', 'fold_groups_param', 'exp_name_log', 'is_multiclass', 'gpu_param', 'target_param', 'y', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'pipeline', 'memory', 'html_param', 'USI', 'X', 'fold_shuffle_param', 'logging_param', '_ml_usecase', '_available_plots', 'X_test', 'y_train', 'fold_generator', 'idx', 'log_plots_param', 'X_train', 'fix_imbalance'}
2025-06-22 16:58:44,727:INFO:Checking environment
2025-06-22 16:58:44,728:INFO:python_version: 3.10.11
2025-06-22 16:58:44,728:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-22 16:58:44,728:INFO:machine: AMD64
2025-06-22 16:58:44,728:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-22 16:58:44,735:INFO:Memory: svmem(total=16312721408, available=3627794432, percent=77.8, used=12684926976, free=3627794432)
2025-06-22 16:58:44,735:INFO:Physical Core: 6
2025-06-22 16:58:44,735:INFO:Logical Core: 12
2025-06-22 16:58:44,735:INFO:Checking libraries
2025-06-22 16:58:44,736:INFO:System:
2025-06-22 16:58:44,736:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-22 16:58:44,736:INFO:executable: C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\Scripts\python.exe
2025-06-22 16:58:44,736:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-22 16:58:44,736:INFO:PyCaret required dependencies:
2025-06-22 16:58:44,736:INFO:                 pip: 23.0.1
2025-06-22 16:58:44,736:INFO:          setuptools: 65.5.0
2025-06-22 16:58:44,736:INFO:             pycaret: 3.3.2
2025-06-22 16:58:44,736:INFO:             IPython: 8.37.0
2025-06-22 16:58:44,736:INFO:          ipywidgets: 8.1.7
2025-06-22 16:58:44,736:INFO:                tqdm: 4.67.1
2025-06-22 16:58:44,736:INFO:               numpy: 1.23.5
2025-06-22 16:58:44,736:INFO:              pandas: 2.0.3
2025-06-22 16:58:44,736:INFO:              jinja2: 3.1.6
2025-06-22 16:58:44,736:INFO:               scipy: 1.11.4
2025-06-22 16:58:44,736:INFO:              joblib: 1.3.2
2025-06-22 16:58:44,736:INFO:             sklearn: 1.4.2
2025-06-22 16:58:44,736:INFO:                pyod: 2.0.5
2025-06-22 16:58:44,736:INFO:            imblearn: 0.13.0
2025-06-22 16:58:44,737:INFO:   category_encoders: 2.7.0
2025-06-22 16:58:44,737:INFO:            lightgbm: 4.6.0
2025-06-22 16:58:44,737:INFO:               numba: 0.56.4
2025-06-22 16:58:44,737:INFO:            requests: 2.32.4
2025-06-22 16:58:44,737:INFO:          matplotlib: 3.5.3
2025-06-22 16:58:44,737:INFO:          scikitplot: 0.3.7
2025-06-22 16:58:44,737:INFO:         yellowbrick: 1.5
2025-06-22 16:58:44,737:INFO:              plotly: 5.24.1
2025-06-22 16:58:44,737:INFO:    plotly-resampler: Not installed
2025-06-22 16:58:44,737:INFO:             kaleido: 1.0.0
2025-06-22 16:58:44,737:INFO:           schemdraw: 0.15
2025-06-22 16:58:44,737:INFO:         statsmodels: 0.14.4
2025-06-22 16:58:44,737:INFO:              sktime: 0.26.0
2025-06-22 16:58:44,737:INFO:               tbats: 1.1.3
2025-06-22 16:58:44,737:INFO:            pmdarima: 2.0.4
2025-06-22 16:58:44,737:INFO:              psutil: 7.0.0
2025-06-22 16:58:44,737:INFO:          markupsafe: 3.0.2
2025-06-22 16:58:44,737:INFO:             pickle5: Not installed
2025-06-22 16:58:44,737:INFO:         cloudpickle: 3.1.1
2025-06-22 16:58:44,737:INFO:         deprecation: 2.1.0
2025-06-22 16:58:44,737:INFO:              xxhash: 3.5.0
2025-06-22 16:58:44,737:INFO:           wurlitzer: Not installed
2025-06-22 16:58:44,737:INFO:PyCaret optional dependencies:
2025-06-22 16:58:44,738:INFO:                shap: 0.44.1
2025-06-22 16:58:44,738:INFO:           interpret: 0.6.12
2025-06-22 16:58:44,738:INFO:                umap: 0.5.7
2025-06-22 16:58:44,738:INFO:     ydata_profiling: 4.16.1
2025-06-22 16:58:44,738:INFO:  explainerdashboard: 0.5.1
2025-06-22 16:58:44,738:INFO:             autoviz: Not installed
2025-06-22 16:58:44,738:INFO:           fairlearn: 0.7.0
2025-06-22 16:58:44,738:INFO:          deepchecks: Not installed
2025-06-22 16:58:44,738:INFO:             xgboost: 3.0.2
2025-06-22 16:58:44,738:INFO:            catboost: 1.2.8
2025-06-22 16:58:44,738:INFO:              kmodes: 0.12.2
2025-06-22 16:58:44,738:INFO:             mlxtend: 0.23.4
2025-06-22 16:58:44,738:INFO:       statsforecast: 1.5.0
2025-06-22 16:58:44,738:INFO:        tune_sklearn: Not installed
2025-06-22 16:58:44,738:INFO:                 ray: Not installed
2025-06-22 16:58:44,738:INFO:            hyperopt: 0.2.7
2025-06-22 16:58:44,738:INFO:              optuna: 4.4.0
2025-06-22 16:58:44,738:INFO:               skopt: 0.10.2
2025-06-22 16:58:44,738:INFO:              mlflow: 3.1.0
2025-06-22 16:58:44,738:INFO:              gradio: 5.34.2
2025-06-22 16:58:44,738:INFO:             fastapi: 0.115.13
2025-06-22 16:58:44,738:INFO:             uvicorn: 0.34.3
2025-06-22 16:58:44,738:INFO:              m2cgen: 0.10.0
2025-06-22 16:58:44,738:INFO:           evidently: 0.4.40
2025-06-22 16:58:44,738:INFO:               fugue: 0.8.7
2025-06-22 16:58:44,738:INFO:           streamlit: 1.46.0
2025-06-22 16:58:44,738:INFO:             prophet: Not installed
2025-06-22 16:58:44,738:INFO:None
2025-06-22 16:58:44,739:INFO:Set up data.
2025-06-22 16:58:44,748:INFO:Set up folding strategy.
2025-06-22 16:58:44,748:INFO:Set up train/test split.
2025-06-22 16:58:44,757:INFO:Set up index.
2025-06-22 16:58:44,759:INFO:Assigning column types.
2025-06-22 16:58:44,763:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-22 16:58:44,813:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-22 16:58:44,818:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 16:58:44,858:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 16:58:44,862:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 16:58:56,106:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-22 16:58:56,108:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 16:58:56,139:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 16:58:56,143:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 16:58:56,143:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-22 16:58:56,201:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 16:58:56,232:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 16:58:56,235:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 16:58:56,286:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 16:58:56,317:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 16:58:56,321:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 16:58:56,322:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-22 16:58:56,403:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 16:58:56,406:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 16:58:56,490:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 16:58:56,493:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 16:58:56,497:INFO:Preparing preprocessing pipeline...
2025-06-22 16:58:56,500:INFO:Set up simple imputation.
2025-06-22 16:58:56,504:INFO:Set up encoding of ordinal features.
2025-06-22 16:58:56,505:INFO:Set up encoding of categorical features.
2025-06-22 16:58:56,646:INFO:Finished creating preprocessing pipeline.
2025-06-22 16:58:56,670:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\taish\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Name', 'Ticket', 'Cabin'],
                                    transformer=TargetEncoder(cols=['Name',
                                                                    'Ticket',
                                                                    'Cabin'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-06-22 16:58:56,670:INFO:Creating final display dataframe.
2025-06-22 16:58:57,126:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 12)
4        Transformed data shape         (891, 14)
5   Transformed train set shape         (623, 14)
6    Transformed test set shape         (268, 14)
7              Numeric features                 6
8          Categorical features                 5
9      Rows with missing values             79.5%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              cdf8
2025-06-22 16:58:57,209:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 16:58:57,209:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 16:58:57,304:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 16:58:57,306:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 16:58:57,308:INFO:setup() successfully completed in 12.58s...............
2025-06-22 16:59:16,651:INFO:PyCaret ClassificationExperiment
2025-06-22 16:59:16,651:INFO:Logging name: clf-default-name
2025-06-22 16:59:16,651:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-22 16:59:16,651:INFO:version 3.3.2
2025-06-22 16:59:16,651:INFO:Initializing setup()
2025-06-22 16:59:16,651:INFO:self.USI: 61fc
2025-06-22 16:59:16,651:INFO:self._variable_keys: {'y_test', 'seed', 'exp_id', 'fold_groups_param', 'exp_name_log', 'is_multiclass', 'gpu_param', 'target_param', 'y', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'pipeline', 'memory', 'html_param', 'USI', 'X', 'fold_shuffle_param', 'logging_param', '_ml_usecase', '_available_plots', 'X_test', 'y_train', 'fold_generator', 'idx', 'log_plots_param', 'X_train', 'fix_imbalance'}
2025-06-22 16:59:16,651:INFO:Checking environment
2025-06-22 16:59:16,651:INFO:python_version: 3.10.11
2025-06-22 16:59:16,652:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-22 16:59:16,652:INFO:machine: AMD64
2025-06-22 16:59:16,652:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-22 16:59:16,659:INFO:Memory: svmem(total=16312721408, available=3719274496, percent=77.2, used=12593446912, free=3719274496)
2025-06-22 16:59:16,660:INFO:Physical Core: 6
2025-06-22 16:59:16,660:INFO:Logical Core: 12
2025-06-22 16:59:16,660:INFO:Checking libraries
2025-06-22 16:59:16,660:INFO:System:
2025-06-22 16:59:16,661:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-22 16:59:16,661:INFO:executable: C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\Scripts\python.exe
2025-06-22 16:59:16,661:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-22 16:59:16,661:INFO:PyCaret required dependencies:
2025-06-22 16:59:16,662:INFO:                 pip: 23.0.1
2025-06-22 16:59:16,662:INFO:          setuptools: 65.5.0
2025-06-22 16:59:16,662:INFO:             pycaret: 3.3.2
2025-06-22 16:59:16,662:INFO:             IPython: 8.37.0
2025-06-22 16:59:16,662:INFO:          ipywidgets: 8.1.7
2025-06-22 16:59:16,662:INFO:                tqdm: 4.67.1
2025-06-22 16:59:16,662:INFO:               numpy: 1.23.5
2025-06-22 16:59:16,662:INFO:              pandas: 2.0.3
2025-06-22 16:59:16,662:INFO:              jinja2: 3.1.6
2025-06-22 16:59:16,662:INFO:               scipy: 1.11.4
2025-06-22 16:59:16,662:INFO:              joblib: 1.3.2
2025-06-22 16:59:16,662:INFO:             sklearn: 1.4.2
2025-06-22 16:59:16,662:INFO:                pyod: 2.0.5
2025-06-22 16:59:16,662:INFO:            imblearn: 0.13.0
2025-06-22 16:59:16,662:INFO:   category_encoders: 2.7.0
2025-06-22 16:59:16,662:INFO:            lightgbm: 4.6.0
2025-06-22 16:59:16,662:INFO:               numba: 0.56.4
2025-06-22 16:59:16,665:INFO:            requests: 2.32.4
2025-06-22 16:59:16,665:INFO:          matplotlib: 3.5.3
2025-06-22 16:59:16,665:INFO:          scikitplot: 0.3.7
2025-06-22 16:59:16,665:INFO:         yellowbrick: 1.5
2025-06-22 16:59:16,665:INFO:              plotly: 5.24.1
2025-06-22 16:59:16,665:INFO:    plotly-resampler: Not installed
2025-06-22 16:59:16,665:INFO:             kaleido: 1.0.0
2025-06-22 16:59:16,665:INFO:           schemdraw: 0.15
2025-06-22 16:59:16,665:INFO:         statsmodels: 0.14.4
2025-06-22 16:59:16,665:INFO:              sktime: 0.26.0
2025-06-22 16:59:16,665:INFO:               tbats: 1.1.3
2025-06-22 16:59:16,665:INFO:            pmdarima: 2.0.4
2025-06-22 16:59:16,665:INFO:              psutil: 7.0.0
2025-06-22 16:59:16,667:INFO:          markupsafe: 3.0.2
2025-06-22 16:59:16,667:INFO:             pickle5: Not installed
2025-06-22 16:59:16,667:INFO:         cloudpickle: 3.1.1
2025-06-22 16:59:16,667:INFO:         deprecation: 2.1.0
2025-06-22 16:59:16,667:INFO:              xxhash: 3.5.0
2025-06-22 16:59:16,667:INFO:           wurlitzer: Not installed
2025-06-22 16:59:16,667:INFO:PyCaret optional dependencies:
2025-06-22 16:59:16,667:INFO:                shap: 0.44.1
2025-06-22 16:59:16,667:INFO:           interpret: 0.6.12
2025-06-22 16:59:16,667:INFO:                umap: 0.5.7
2025-06-22 16:59:16,667:INFO:     ydata_profiling: 4.16.1
2025-06-22 16:59:16,667:INFO:  explainerdashboard: 0.5.1
2025-06-22 16:59:16,667:INFO:             autoviz: Not installed
2025-06-22 16:59:16,667:INFO:           fairlearn: 0.7.0
2025-06-22 16:59:16,667:INFO:          deepchecks: Not installed
2025-06-22 16:59:16,667:INFO:             xgboost: 3.0.2
2025-06-22 16:59:16,667:INFO:            catboost: 1.2.8
2025-06-22 16:59:16,667:INFO:              kmodes: 0.12.2
2025-06-22 16:59:16,667:INFO:             mlxtend: 0.23.4
2025-06-22 16:59:16,667:INFO:       statsforecast: 1.5.0
2025-06-22 16:59:16,667:INFO:        tune_sklearn: Not installed
2025-06-22 16:59:16,667:INFO:                 ray: Not installed
2025-06-22 16:59:16,667:INFO:            hyperopt: 0.2.7
2025-06-22 16:59:16,671:INFO:              optuna: 4.4.0
2025-06-22 16:59:16,671:INFO:               skopt: 0.10.2
2025-06-22 16:59:16,671:INFO:              mlflow: 3.1.0
2025-06-22 16:59:16,671:INFO:              gradio: 5.34.2
2025-06-22 16:59:16,671:INFO:             fastapi: 0.115.13
2025-06-22 16:59:16,671:INFO:             uvicorn: 0.34.3
2025-06-22 16:59:16,671:INFO:              m2cgen: 0.10.0
2025-06-22 16:59:16,671:INFO:           evidently: 0.4.40
2025-06-22 16:59:16,671:INFO:               fugue: 0.8.7
2025-06-22 16:59:16,673:INFO:           streamlit: 1.46.0
2025-06-22 16:59:16,673:INFO:             prophet: Not installed
2025-06-22 16:59:16,673:INFO:None
2025-06-22 16:59:16,673:INFO:Set up data.
2025-06-22 16:59:16,681:INFO:Set up folding strategy.
2025-06-22 16:59:16,681:INFO:Set up train/test split.
2025-06-22 17:02:08,110:INFO:PyCaret ClassificationExperiment
2025-06-22 17:02:08,110:INFO:Logging name: clf-default-name
2025-06-22 17:02:08,110:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-22 17:02:08,110:INFO:version 3.3.2
2025-06-22 17:02:08,110:INFO:Initializing setup()
2025-06-22 17:02:08,110:INFO:self.USI: ec90
2025-06-22 17:02:08,110:INFO:self._variable_keys: {'y_test', 'seed', 'exp_id', 'fold_groups_param', 'exp_name_log', 'is_multiclass', 'gpu_param', 'target_param', 'y', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'pipeline', 'memory', 'html_param', 'USI', 'X', 'fold_shuffle_param', 'logging_param', '_ml_usecase', '_available_plots', 'X_test', 'y_train', 'fold_generator', 'idx', 'log_plots_param', 'X_train', 'fix_imbalance'}
2025-06-22 17:02:08,110:INFO:Checking environment
2025-06-22 17:02:08,110:INFO:python_version: 3.10.11
2025-06-22 17:02:08,110:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-22 17:02:08,110:INFO:machine: AMD64
2025-06-22 17:02:08,111:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-22 17:02:08,117:INFO:Memory: svmem(total=16312721408, available=3749765120, percent=77.0, used=12562956288, free=3749765120)
2025-06-22 17:02:08,117:INFO:Physical Core: 6
2025-06-22 17:02:08,117:INFO:Logical Core: 12
2025-06-22 17:02:08,117:INFO:Checking libraries
2025-06-22 17:02:08,117:INFO:System:
2025-06-22 17:02:08,117:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-22 17:02:08,117:INFO:executable: C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\Scripts\python.exe
2025-06-22 17:02:08,117:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-22 17:02:08,117:INFO:PyCaret required dependencies:
2025-06-22 17:02:08,117:INFO:                 pip: 23.0.1
2025-06-22 17:02:08,117:INFO:          setuptools: 65.5.0
2025-06-22 17:02:08,117:INFO:             pycaret: 3.3.2
2025-06-22 17:02:08,117:INFO:             IPython: 8.37.0
2025-06-22 17:02:08,117:INFO:          ipywidgets: 8.1.7
2025-06-22 17:02:08,117:INFO:                tqdm: 4.67.1
2025-06-22 17:02:08,117:INFO:               numpy: 1.23.5
2025-06-22 17:02:08,117:INFO:              pandas: 2.0.3
2025-06-22 17:02:08,117:INFO:              jinja2: 3.1.6
2025-06-22 17:02:08,117:INFO:               scipy: 1.11.4
2025-06-22 17:02:08,117:INFO:              joblib: 1.3.2
2025-06-22 17:02:08,117:INFO:             sklearn: 1.4.2
2025-06-22 17:02:08,117:INFO:                pyod: 2.0.5
2025-06-22 17:02:08,117:INFO:            imblearn: 0.13.0
2025-06-22 17:02:08,117:INFO:   category_encoders: 2.7.0
2025-06-22 17:02:08,117:INFO:            lightgbm: 4.6.0
2025-06-22 17:02:08,117:INFO:               numba: 0.56.4
2025-06-22 17:02:08,117:INFO:            requests: 2.32.4
2025-06-22 17:02:08,117:INFO:          matplotlib: 3.5.3
2025-06-22 17:02:08,117:INFO:          scikitplot: 0.3.7
2025-06-22 17:02:08,120:INFO:         yellowbrick: 1.5
2025-06-22 17:02:08,120:INFO:              plotly: 5.24.1
2025-06-22 17:02:08,120:INFO:    plotly-resampler: Not installed
2025-06-22 17:02:08,120:INFO:             kaleido: 1.0.0
2025-06-22 17:02:08,120:INFO:           schemdraw: 0.15
2025-06-22 17:02:08,120:INFO:         statsmodels: 0.14.4
2025-06-22 17:02:08,120:INFO:              sktime: 0.26.0
2025-06-22 17:02:08,120:INFO:               tbats: 1.1.3
2025-06-22 17:02:08,120:INFO:            pmdarima: 2.0.4
2025-06-22 17:02:08,120:INFO:              psutil: 7.0.0
2025-06-22 17:02:08,120:INFO:          markupsafe: 3.0.2
2025-06-22 17:02:08,120:INFO:             pickle5: Not installed
2025-06-22 17:02:08,120:INFO:         cloudpickle: 3.1.1
2025-06-22 17:02:08,120:INFO:         deprecation: 2.1.0
2025-06-22 17:02:08,120:INFO:              xxhash: 3.5.0
2025-06-22 17:02:08,120:INFO:           wurlitzer: Not installed
2025-06-22 17:02:08,120:INFO:PyCaret optional dependencies:
2025-06-22 17:02:08,120:INFO:                shap: 0.44.1
2025-06-22 17:02:08,120:INFO:           interpret: 0.6.12
2025-06-22 17:02:08,120:INFO:                umap: 0.5.7
2025-06-22 17:02:08,120:INFO:     ydata_profiling: 4.16.1
2025-06-22 17:02:08,120:INFO:  explainerdashboard: 0.5.1
2025-06-22 17:02:08,120:INFO:             autoviz: Not installed
2025-06-22 17:02:08,120:INFO:           fairlearn: 0.7.0
2025-06-22 17:02:08,120:INFO:          deepchecks: Not installed
2025-06-22 17:02:08,120:INFO:             xgboost: 3.0.2
2025-06-22 17:02:08,120:INFO:            catboost: 1.2.8
2025-06-22 17:02:08,120:INFO:              kmodes: 0.12.2
2025-06-22 17:02:08,120:INFO:             mlxtend: 0.23.4
2025-06-22 17:02:08,120:INFO:       statsforecast: 1.5.0
2025-06-22 17:02:08,120:INFO:        tune_sklearn: Not installed
2025-06-22 17:02:08,120:INFO:                 ray: Not installed
2025-06-22 17:02:08,120:INFO:            hyperopt: 0.2.7
2025-06-22 17:02:08,120:INFO:              optuna: 4.4.0
2025-06-22 17:02:08,120:INFO:               skopt: 0.10.2
2025-06-22 17:02:08,120:INFO:              mlflow: 3.1.0
2025-06-22 17:02:08,120:INFO:              gradio: 5.34.2
2025-06-22 17:02:08,120:INFO:             fastapi: 0.115.13
2025-06-22 17:02:08,120:INFO:             uvicorn: 0.34.3
2025-06-22 17:02:08,120:INFO:              m2cgen: 0.10.0
2025-06-22 17:02:08,120:INFO:           evidently: 0.4.40
2025-06-22 17:02:08,120:INFO:               fugue: 0.8.7
2025-06-22 17:02:08,120:INFO:           streamlit: 1.46.0
2025-06-22 17:02:08,120:INFO:             prophet: Not installed
2025-06-22 17:02:08,120:INFO:None
2025-06-22 17:02:08,120:INFO:Set up data.
2025-06-22 17:02:08,125:INFO:Set up folding strategy.
2025-06-22 17:02:08,125:INFO:Set up train/test split.
2025-06-22 17:02:08,134:INFO:Set up index.
2025-06-22 17:02:08,134:INFO:Assigning column types.
2025-06-22 17:02:08,134:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-22 17:02:08,191:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-22 17:02:08,191:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:02:08,223:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:02:08,223:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:02:08,271:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-22 17:02:08,271:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:02:08,311:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:02:08,317:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:02:08,318:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-22 17:02:08,366:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:02:08,399:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:02:08,399:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:02:08,445:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:02:08,482:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:02:08,482:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:02:08,495:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-22 17:02:08,583:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:02:08,583:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:02:08,661:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:02:08,661:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:02:08,661:INFO:Preparing preprocessing pipeline...
2025-06-22 17:02:08,661:INFO:Set up simple imputation.
2025-06-22 17:02:08,678:INFO:Set up encoding of ordinal features.
2025-06-22 17:02:08,678:INFO:Set up encoding of categorical features.
2025-06-22 17:02:08,797:INFO:Finished creating preprocessing pipeline.
2025-06-22 17:02:08,813:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\taish\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Name', 'Ticket'],
                                    transformer=TargetEncoder(cols=['Name',
                                                                    'Ticket'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-06-22 17:02:08,813:INFO:Creating final display dataframe.
2025-06-22 17:02:09,248:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 11)
4        Transformed data shape         (891, 13)
5   Transformed train set shape         (623, 13)
6    Transformed test set shape         (268, 13)
7              Numeric features                 6
8          Categorical features                 4
9      Rows with missing values             20.1%
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              ec90
2025-06-22 17:02:09,334:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:02:09,337:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:02:09,426:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:02:09,429:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:02:09,431:INFO:setup() successfully completed in 1.33s...............
2025-06-22 17:24:20,074:INFO:PyCaret ClassificationExperiment
2025-06-22 17:24:20,074:INFO:Logging name: clf-default-name
2025-06-22 17:24:20,074:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-22 17:24:20,074:INFO:version 3.3.2
2025-06-22 17:24:20,074:INFO:Initializing setup()
2025-06-22 17:24:20,074:INFO:self.USI: 7633
2025-06-22 17:24:20,074:INFO:self._variable_keys: {'y_test', 'seed', 'exp_id', 'fold_groups_param', 'exp_name_log', 'is_multiclass', 'gpu_param', 'target_param', 'y', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'pipeline', 'memory', 'html_param', 'USI', 'X', 'fold_shuffle_param', 'logging_param', '_ml_usecase', '_available_plots', 'X_test', 'y_train', 'fold_generator', 'idx', 'log_plots_param', 'X_train', 'fix_imbalance'}
2025-06-22 17:24:20,074:INFO:Checking environment
2025-06-22 17:24:20,074:INFO:python_version: 3.10.11
2025-06-22 17:24:20,074:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-22 17:24:20,074:INFO:machine: AMD64
2025-06-22 17:24:20,074:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-22 17:24:20,080:INFO:Memory: svmem(total=16312721408, available=2038956032, percent=87.5, used=14273765376, free=2038956032)
2025-06-22 17:24:20,080:INFO:Physical Core: 6
2025-06-22 17:24:20,080:INFO:Logical Core: 12
2025-06-22 17:24:20,080:INFO:Checking libraries
2025-06-22 17:24:20,080:INFO:System:
2025-06-22 17:24:20,080:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-22 17:24:20,080:INFO:executable: C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\Scripts\python.exe
2025-06-22 17:24:20,080:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-22 17:24:20,080:INFO:PyCaret required dependencies:
2025-06-22 17:24:20,080:INFO:                 pip: 23.0.1
2025-06-22 17:24:20,081:INFO:          setuptools: 65.5.0
2025-06-22 17:24:20,081:INFO:             pycaret: 3.3.2
2025-06-22 17:24:20,081:INFO:             IPython: 8.37.0
2025-06-22 17:24:20,081:INFO:          ipywidgets: 8.1.7
2025-06-22 17:24:20,081:INFO:                tqdm: 4.67.1
2025-06-22 17:24:20,081:INFO:               numpy: 1.23.5
2025-06-22 17:24:20,081:INFO:              pandas: 2.0.3
2025-06-22 17:24:20,081:INFO:              jinja2: 3.1.6
2025-06-22 17:24:20,081:INFO:               scipy: 1.11.4
2025-06-22 17:24:20,081:INFO:              joblib: 1.3.2
2025-06-22 17:24:20,081:INFO:             sklearn: 1.4.2
2025-06-22 17:24:20,081:INFO:                pyod: 2.0.5
2025-06-22 17:24:20,081:INFO:            imblearn: 0.13.0
2025-06-22 17:24:20,081:INFO:   category_encoders: 2.7.0
2025-06-22 17:24:20,081:INFO:            lightgbm: 4.6.0
2025-06-22 17:24:20,081:INFO:               numba: 0.56.4
2025-06-22 17:24:20,081:INFO:            requests: 2.32.4
2025-06-22 17:24:20,081:INFO:          matplotlib: 3.5.3
2025-06-22 17:24:20,081:INFO:          scikitplot: 0.3.7
2025-06-22 17:24:20,081:INFO:         yellowbrick: 1.5
2025-06-22 17:24:20,081:INFO:              plotly: 5.24.1
2025-06-22 17:24:20,081:INFO:    plotly-resampler: Not installed
2025-06-22 17:24:20,081:INFO:             kaleido: 1.0.0
2025-06-22 17:24:20,081:INFO:           schemdraw: 0.15
2025-06-22 17:24:20,081:INFO:         statsmodels: 0.14.4
2025-06-22 17:24:20,081:INFO:              sktime: 0.26.0
2025-06-22 17:24:20,081:INFO:               tbats: 1.1.3
2025-06-22 17:24:20,081:INFO:            pmdarima: 2.0.4
2025-06-22 17:24:20,081:INFO:              psutil: 7.0.0
2025-06-22 17:24:20,081:INFO:          markupsafe: 3.0.2
2025-06-22 17:24:20,081:INFO:             pickle5: Not installed
2025-06-22 17:24:20,081:INFO:         cloudpickle: 3.1.1
2025-06-22 17:24:20,081:INFO:         deprecation: 2.1.0
2025-06-22 17:24:20,081:INFO:              xxhash: 3.5.0
2025-06-22 17:24:20,081:INFO:           wurlitzer: Not installed
2025-06-22 17:24:20,081:INFO:PyCaret optional dependencies:
2025-06-22 17:24:20,081:INFO:                shap: 0.44.1
2025-06-22 17:24:20,081:INFO:           interpret: 0.6.12
2025-06-22 17:24:20,081:INFO:                umap: 0.5.7
2025-06-22 17:24:20,082:INFO:     ydata_profiling: 4.16.1
2025-06-22 17:24:20,082:INFO:  explainerdashboard: 0.5.1
2025-06-22 17:24:20,082:INFO:             autoviz: Not installed
2025-06-22 17:24:20,082:INFO:           fairlearn: 0.7.0
2025-06-22 17:24:20,082:INFO:          deepchecks: Not installed
2025-06-22 17:24:20,082:INFO:             xgboost: 3.0.2
2025-06-22 17:24:20,082:INFO:            catboost: 1.2.8
2025-06-22 17:24:20,082:INFO:              kmodes: 0.12.2
2025-06-22 17:24:20,082:INFO:             mlxtend: 0.23.4
2025-06-22 17:24:20,082:INFO:       statsforecast: 1.5.0
2025-06-22 17:24:20,082:INFO:        tune_sklearn: Not installed
2025-06-22 17:24:20,082:INFO:                 ray: Not installed
2025-06-22 17:24:20,082:INFO:            hyperopt: 0.2.7
2025-06-22 17:24:20,082:INFO:              optuna: 4.4.0
2025-06-22 17:24:20,082:INFO:               skopt: 0.10.2
2025-06-22 17:24:20,082:INFO:              mlflow: 3.1.0
2025-06-22 17:24:20,082:INFO:              gradio: 5.34.2
2025-06-22 17:24:20,082:INFO:             fastapi: 0.115.13
2025-06-22 17:24:20,082:INFO:             uvicorn: 0.34.3
2025-06-22 17:24:20,082:INFO:              m2cgen: 0.10.0
2025-06-22 17:24:20,082:INFO:           evidently: 0.4.40
2025-06-22 17:24:20,082:INFO:               fugue: 0.8.7
2025-06-22 17:24:20,082:INFO:           streamlit: 1.46.0
2025-06-22 17:24:20,082:INFO:             prophet: Not installed
2025-06-22 17:24:20,082:INFO:None
2025-06-22 17:24:20,082:INFO:Set up data.
2025-06-22 17:24:20,088:INFO:Set up folding strategy.
2025-06-22 17:24:20,088:INFO:Set up train/test split.
2025-06-22 17:24:26,030:INFO:PyCaret ClassificationExperiment
2025-06-22 17:24:26,030:INFO:Logging name: clf-default-name
2025-06-22 17:24:26,030:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-22 17:24:26,031:INFO:version 3.3.2
2025-06-22 17:24:26,031:INFO:Initializing setup()
2025-06-22 17:24:26,031:INFO:self.USI: 746d
2025-06-22 17:24:26,031:INFO:self._variable_keys: {'y_test', 'seed', 'exp_id', 'fold_groups_param', 'exp_name_log', 'is_multiclass', 'gpu_param', 'target_param', 'y', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'pipeline', 'memory', 'html_param', 'USI', 'X', 'fold_shuffle_param', 'logging_param', '_ml_usecase', '_available_plots', 'X_test', 'y_train', 'fold_generator', 'idx', 'log_plots_param', 'X_train', 'fix_imbalance'}
2025-06-22 17:24:26,031:INFO:Checking environment
2025-06-22 17:24:26,031:INFO:python_version: 3.10.11
2025-06-22 17:24:26,031:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-22 17:24:26,031:INFO:machine: AMD64
2025-06-22 17:24:26,031:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-22 17:24:26,037:INFO:Memory: svmem(total=16312721408, available=2106073088, percent=87.1, used=14206648320, free=2106073088)
2025-06-22 17:24:26,037:INFO:Physical Core: 6
2025-06-22 17:24:26,039:INFO:Logical Core: 12
2025-06-22 17:24:26,039:INFO:Checking libraries
2025-06-22 17:24:26,039:INFO:System:
2025-06-22 17:24:26,039:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-22 17:24:26,039:INFO:executable: C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\Scripts\python.exe
2025-06-22 17:24:26,039:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-22 17:24:26,039:INFO:PyCaret required dependencies:
2025-06-22 17:24:26,039:INFO:                 pip: 23.0.1
2025-06-22 17:24:26,039:INFO:          setuptools: 65.5.0
2025-06-22 17:24:26,039:INFO:             pycaret: 3.3.2
2025-06-22 17:24:26,040:INFO:             IPython: 8.37.0
2025-06-22 17:24:26,040:INFO:          ipywidgets: 8.1.7
2025-06-22 17:24:26,040:INFO:                tqdm: 4.67.1
2025-06-22 17:24:26,040:INFO:               numpy: 1.23.5
2025-06-22 17:24:26,040:INFO:              pandas: 2.0.3
2025-06-22 17:24:26,040:INFO:              jinja2: 3.1.6
2025-06-22 17:24:26,040:INFO:               scipy: 1.11.4
2025-06-22 17:24:26,040:INFO:              joblib: 1.3.2
2025-06-22 17:24:26,040:INFO:             sklearn: 1.4.2
2025-06-22 17:24:26,040:INFO:                pyod: 2.0.5
2025-06-22 17:24:26,040:INFO:            imblearn: 0.13.0
2025-06-22 17:24:26,040:INFO:   category_encoders: 2.7.0
2025-06-22 17:24:26,040:INFO:            lightgbm: 4.6.0
2025-06-22 17:24:26,040:INFO:               numba: 0.56.4
2025-06-22 17:24:26,040:INFO:            requests: 2.32.4
2025-06-22 17:24:26,040:INFO:          matplotlib: 3.5.3
2025-06-22 17:24:26,040:INFO:          scikitplot: 0.3.7
2025-06-22 17:24:26,040:INFO:         yellowbrick: 1.5
2025-06-22 17:24:26,040:INFO:              plotly: 5.24.1
2025-06-22 17:24:26,040:INFO:    plotly-resampler: Not installed
2025-06-22 17:24:26,040:INFO:             kaleido: 1.0.0
2025-06-22 17:24:26,040:INFO:           schemdraw: 0.15
2025-06-22 17:24:26,040:INFO:         statsmodels: 0.14.4
2025-06-22 17:24:26,040:INFO:              sktime: 0.26.0
2025-06-22 17:24:26,040:INFO:               tbats: 1.1.3
2025-06-22 17:24:26,040:INFO:            pmdarima: 2.0.4
2025-06-22 17:24:26,040:INFO:              psutil: 7.0.0
2025-06-22 17:24:26,040:INFO:          markupsafe: 3.0.2
2025-06-22 17:24:26,041:INFO:             pickle5: Not installed
2025-06-22 17:24:26,041:INFO:         cloudpickle: 3.1.1
2025-06-22 17:24:26,041:INFO:         deprecation: 2.1.0
2025-06-22 17:24:26,041:INFO:              xxhash: 3.5.0
2025-06-22 17:24:26,041:INFO:           wurlitzer: Not installed
2025-06-22 17:24:26,041:INFO:PyCaret optional dependencies:
2025-06-22 17:24:26,041:INFO:                shap: 0.44.1
2025-06-22 17:24:26,041:INFO:           interpret: 0.6.12
2025-06-22 17:24:26,041:INFO:                umap: 0.5.7
2025-06-22 17:24:26,041:INFO:     ydata_profiling: 4.16.1
2025-06-22 17:24:26,041:INFO:  explainerdashboard: 0.5.1
2025-06-22 17:24:26,041:INFO:             autoviz: Not installed
2025-06-22 17:24:26,041:INFO:           fairlearn: 0.7.0
2025-06-22 17:24:26,041:INFO:          deepchecks: Not installed
2025-06-22 17:24:26,041:INFO:             xgboost: 3.0.2
2025-06-22 17:24:26,041:INFO:            catboost: 1.2.8
2025-06-22 17:24:26,041:INFO:              kmodes: 0.12.2
2025-06-22 17:24:26,041:INFO:             mlxtend: 0.23.4
2025-06-22 17:24:26,041:INFO:       statsforecast: 1.5.0
2025-06-22 17:24:26,041:INFO:        tune_sklearn: Not installed
2025-06-22 17:24:26,041:INFO:                 ray: Not installed
2025-06-22 17:24:26,041:INFO:            hyperopt: 0.2.7
2025-06-22 17:24:26,042:INFO:              optuna: 4.4.0
2025-06-22 17:24:26,042:INFO:               skopt: 0.10.2
2025-06-22 17:24:26,042:INFO:              mlflow: 3.1.0
2025-06-22 17:24:26,042:INFO:              gradio: 5.34.2
2025-06-22 17:24:26,042:INFO:             fastapi: 0.115.13
2025-06-22 17:24:26,042:INFO:             uvicorn: 0.34.3
2025-06-22 17:24:26,042:INFO:              m2cgen: 0.10.0
2025-06-22 17:24:26,042:INFO:           evidently: 0.4.40
2025-06-22 17:24:26,042:INFO:               fugue: 0.8.7
2025-06-22 17:24:26,042:INFO:           streamlit: 1.46.0
2025-06-22 17:24:26,042:INFO:             prophet: Not installed
2025-06-22 17:24:26,042:INFO:None
2025-06-22 17:24:26,042:INFO:Set up data.
2025-06-22 17:24:26,050:INFO:Set up folding strategy.
2025-06-22 17:24:26,050:INFO:Set up train/test split.
2025-06-22 17:24:26,058:INFO:Set up index.
2025-06-22 17:24:26,058:INFO:Assigning column types.
2025-06-22 17:24:26,062:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-22 17:24:26,117:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-22 17:24:26,118:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:24:26,151:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:24:26,154:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:24:26,229:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-22 17:24:26,231:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:24:26,272:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:24:26,275:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:24:26,276:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-22 17:24:26,331:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:24:26,366:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:24:26,371:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:24:26,454:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:24:26,510:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:24:26,513:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:24:26,515:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-22 17:24:26,617:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:24:26,622:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:24:26,728:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:24:26,731:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:24:26,733:INFO:Preparing preprocessing pipeline...
2025-06-22 17:24:26,735:INFO:Set up simple imputation.
2025-06-22 17:24:26,738:INFO:Set up encoding of ordinal features.
2025-06-22 17:24:26,741:INFO:Set up encoding of categorical features.
2025-06-22 17:24:26,891:INFO:Finished creating preprocessing pipeline.
2025-06-22 17:24:26,913:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\taish\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Name', 'Ticket'],
                                    transformer=TargetEncoder(cols=['Name',
                                                                    'Ticket'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-06-22 17:24:26,913:INFO:Creating final display dataframe.
2025-06-22 17:24:27,347:INFO:Setup _display_container:                     Description             Value
0                    Session id               662
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 11)
4        Transformed data shape         (891, 13)
5   Transformed train set shape         (623, 13)
6    Transformed test set shape         (268, 13)
7              Numeric features                 6
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              746d
2025-06-22 17:24:27,430:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:24:27,433:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:24:27,517:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:24:27,520:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:24:27,522:INFO:setup() successfully completed in 1.5s...............
2025-06-22 17:27:34,651:INFO:PyCaret ClassificationExperiment
2025-06-22 17:27:34,651:INFO:Logging name: clf-default-name
2025-06-22 17:27:34,651:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-22 17:27:34,651:INFO:version 3.3.2
2025-06-22 17:27:34,651:INFO:Initializing setup()
2025-06-22 17:27:34,651:INFO:self.USI: 8b22
2025-06-22 17:27:34,651:INFO:self._variable_keys: {'y_test', 'seed', 'exp_id', 'fold_groups_param', 'exp_name_log', 'is_multiclass', 'gpu_param', 'target_param', 'y', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'pipeline', 'memory', 'html_param', 'USI', 'X', 'fold_shuffle_param', 'logging_param', '_ml_usecase', '_available_plots', 'X_test', 'y_train', 'fold_generator', 'idx', 'log_plots_param', 'X_train', 'fix_imbalance'}
2025-06-22 17:27:34,652:INFO:Checking environment
2025-06-22 17:27:34,652:INFO:python_version: 3.10.11
2025-06-22 17:27:34,652:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-22 17:27:34,652:INFO:machine: AMD64
2025-06-22 17:27:34,652:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-22 17:27:34,658:INFO:Memory: svmem(total=16312721408, available=1984720896, percent=87.8, used=14328000512, free=1984720896)
2025-06-22 17:27:34,658:INFO:Physical Core: 6
2025-06-22 17:27:34,659:INFO:Logical Core: 12
2025-06-22 17:27:34,659:INFO:Checking libraries
2025-06-22 17:27:34,659:INFO:System:
2025-06-22 17:27:34,659:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-22 17:27:34,659:INFO:executable: C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\Scripts\python.exe
2025-06-22 17:27:34,659:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-22 17:27:34,659:INFO:PyCaret required dependencies:
2025-06-22 17:27:34,659:INFO:                 pip: 23.0.1
2025-06-22 17:27:34,659:INFO:          setuptools: 65.5.0
2025-06-22 17:27:34,659:INFO:             pycaret: 3.3.2
2025-06-22 17:27:34,659:INFO:             IPython: 8.37.0
2025-06-22 17:27:34,659:INFO:          ipywidgets: 8.1.7
2025-06-22 17:27:34,659:INFO:                tqdm: 4.67.1
2025-06-22 17:27:34,659:INFO:               numpy: 1.23.5
2025-06-22 17:27:34,659:INFO:              pandas: 2.0.3
2025-06-22 17:27:34,659:INFO:              jinja2: 3.1.6
2025-06-22 17:27:34,659:INFO:               scipy: 1.11.4
2025-06-22 17:27:34,659:INFO:              joblib: 1.3.2
2025-06-22 17:27:34,659:INFO:             sklearn: 1.4.2
2025-06-22 17:27:34,660:INFO:                pyod: 2.0.5
2025-06-22 17:27:34,660:INFO:            imblearn: 0.13.0
2025-06-22 17:27:34,660:INFO:   category_encoders: 2.7.0
2025-06-22 17:27:34,660:INFO:            lightgbm: 4.6.0
2025-06-22 17:27:34,660:INFO:               numba: 0.56.4
2025-06-22 17:27:34,660:INFO:            requests: 2.32.4
2025-06-22 17:27:34,660:INFO:          matplotlib: 3.5.3
2025-06-22 17:27:34,660:INFO:          scikitplot: 0.3.7
2025-06-22 17:27:34,660:INFO:         yellowbrick: 1.5
2025-06-22 17:27:34,660:INFO:              plotly: 5.24.1
2025-06-22 17:27:34,660:INFO:    plotly-resampler: Not installed
2025-06-22 17:27:34,660:INFO:             kaleido: 1.0.0
2025-06-22 17:27:34,660:INFO:           schemdraw: 0.15
2025-06-22 17:27:34,660:INFO:         statsmodels: 0.14.4
2025-06-22 17:27:34,660:INFO:              sktime: 0.26.0
2025-06-22 17:27:34,660:INFO:               tbats: 1.1.3
2025-06-22 17:27:34,660:INFO:            pmdarima: 2.0.4
2025-06-22 17:27:34,660:INFO:              psutil: 7.0.0
2025-06-22 17:27:34,660:INFO:          markupsafe: 3.0.2
2025-06-22 17:27:34,660:INFO:             pickle5: Not installed
2025-06-22 17:27:34,660:INFO:         cloudpickle: 3.1.1
2025-06-22 17:27:34,660:INFO:         deprecation: 2.1.0
2025-06-22 17:27:34,660:INFO:              xxhash: 3.5.0
2025-06-22 17:27:34,660:INFO:           wurlitzer: Not installed
2025-06-22 17:27:34,660:INFO:PyCaret optional dependencies:
2025-06-22 17:27:34,660:INFO:                shap: 0.44.1
2025-06-22 17:27:34,660:INFO:           interpret: 0.6.12
2025-06-22 17:27:34,660:INFO:                umap: 0.5.7
2025-06-22 17:27:34,660:INFO:     ydata_profiling: 4.16.1
2025-06-22 17:27:34,660:INFO:  explainerdashboard: 0.5.1
2025-06-22 17:27:34,661:INFO:             autoviz: Not installed
2025-06-22 17:27:34,661:INFO:           fairlearn: 0.7.0
2025-06-22 17:27:34,661:INFO:          deepchecks: Not installed
2025-06-22 17:27:34,661:INFO:             xgboost: 3.0.2
2025-06-22 17:27:34,661:INFO:            catboost: 1.2.8
2025-06-22 17:27:34,661:INFO:              kmodes: 0.12.2
2025-06-22 17:27:34,661:INFO:             mlxtend: 0.23.4
2025-06-22 17:27:34,661:INFO:       statsforecast: 1.5.0
2025-06-22 17:27:34,661:INFO:        tune_sklearn: Not installed
2025-06-22 17:27:34,661:INFO:                 ray: Not installed
2025-06-22 17:27:34,661:INFO:            hyperopt: 0.2.7
2025-06-22 17:27:34,661:INFO:              optuna: 4.4.0
2025-06-22 17:27:34,661:INFO:               skopt: 0.10.2
2025-06-22 17:27:34,661:INFO:              mlflow: 3.1.0
2025-06-22 17:27:34,661:INFO:              gradio: 5.34.2
2025-06-22 17:27:34,661:INFO:             fastapi: 0.115.13
2025-06-22 17:27:34,661:INFO:             uvicorn: 0.34.3
2025-06-22 17:27:34,661:INFO:              m2cgen: 0.10.0
2025-06-22 17:27:34,661:INFO:           evidently: 0.4.40
2025-06-22 17:27:34,661:INFO:               fugue: 0.8.7
2025-06-22 17:27:34,661:INFO:           streamlit: 1.46.0
2025-06-22 17:27:34,661:INFO:             prophet: Not installed
2025-06-22 17:27:34,661:INFO:None
2025-06-22 17:27:34,661:INFO:Set up data.
2025-06-22 17:27:34,669:INFO:Set up folding strategy.
2025-06-22 17:27:34,669:INFO:Set up train/test split.
2025-06-22 17:27:34,676:INFO:Set up index.
2025-06-22 17:27:34,676:INFO:Assigning column types.
2025-06-22 17:27:34,682:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-22 17:27:34,734:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-22 17:27:34,735:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:27:34,767:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:27:34,770:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:27:34,822:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-22 17:27:34,823:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:27:34,853:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:27:34,853:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:27:34,853:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-22 17:27:34,903:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:27:34,941:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:27:34,941:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:27:34,990:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:27:35,021:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:27:35,035:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:27:35,035:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-22 17:27:35,126:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:27:35,126:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:27:35,206:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:27:35,206:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:27:35,221:INFO:Preparing preprocessing pipeline...
2025-06-22 17:27:35,222:INFO:Set up simple imputation.
2025-06-22 17:27:35,222:INFO:Set up encoding of ordinal features.
2025-06-22 17:27:35,222:INFO:Set up encoding of categorical features.
2025-06-22 17:27:35,334:INFO:Finished creating preprocessing pipeline.
2025-06-22 17:27:35,366:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\taish\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Name', 'Ticket'],
                                    transformer=TargetEncoder(cols=['Name',
                                                                    'Ticket'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-06-22 17:27:35,366:INFO:Creating final display dataframe.
2025-06-22 17:27:35,781:INFO:Setup _display_container:                     Description             Value
0                    Session id              5052
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 11)
4        Transformed data shape         (891, 13)
5   Transformed train set shape         (623, 13)
6    Transformed test set shape         (268, 13)
7              Numeric features                 6
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              8b22
2025-06-22 17:27:35,861:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:27:35,861:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:27:35,951:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:27:35,951:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:27:35,951:INFO:setup() successfully completed in 1.3s...............
2025-06-22 17:27:35,951:INFO:Initializing compare_models()
2025-06-22 17:27:35,951:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-22 17:27:35,951:INFO:Checking exceptions
2025-06-22 17:27:35,970:INFO:Preparing display monitor
2025-06-22 17:27:35,972:INFO:Initializing Logistic Regression
2025-06-22 17:27:35,972:INFO:Total runtime is 0.0 minutes
2025-06-22 17:27:35,973:INFO:SubProcess create_model() called ==================================
2025-06-22 17:27:35,973:INFO:Initializing create_model()
2025-06-22 17:27:35,973:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:27:35,973:INFO:Checking exceptions
2025-06-22 17:27:35,973:INFO:Importing libraries
2025-06-22 17:27:35,973:INFO:Copying training dataset
2025-06-22 17:27:35,978:INFO:Defining folds
2025-06-22 17:27:35,979:INFO:Declaring metric variables
2025-06-22 17:27:35,979:INFO:Importing untrained model
2025-06-22 17:27:35,979:INFO:Logistic Regression Imported successfully
2025-06-22 17:27:35,979:INFO:Starting cross validation
2025-06-22 17:27:35,981:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:27:43,108:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:27:43,108:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:27:43,108:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:27:43,108:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:27:43,108:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:27:43,108:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:27:43,165:INFO:Calculating mean and std
2025-06-22 17:27:43,165:INFO:Creating metrics dataframe
2025-06-22 17:27:43,168:INFO:Uploading results into container
2025-06-22 17:27:43,169:INFO:Uploading model into container now
2025-06-22 17:27:43,170:INFO:_master_model_container: 1
2025-06-22 17:27:43,170:INFO:_display_container: 2
2025-06-22 17:27:43,171:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5052, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-22 17:27:43,171:INFO:create_model() successfully completed......................................
2025-06-22 17:27:43,434:INFO:SubProcess create_model() end ==================================
2025-06-22 17:27:43,434:INFO:Creating metrics dataframe
2025-06-22 17:27:43,438:INFO:Initializing K Neighbors Classifier
2025-06-22 17:27:43,438:INFO:Total runtime is 0.12442582448323568 minutes
2025-06-22 17:27:43,438:INFO:SubProcess create_model() called ==================================
2025-06-22 17:27:43,438:INFO:Initializing create_model()
2025-06-22 17:27:43,438:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:27:43,438:INFO:Checking exceptions
2025-06-22 17:27:43,438:INFO:Importing libraries
2025-06-22 17:27:43,438:INFO:Copying training dataset
2025-06-22 17:27:43,445:INFO:Defining folds
2025-06-22 17:27:43,445:INFO:Declaring metric variables
2025-06-22 17:27:43,445:INFO:Importing untrained model
2025-06-22 17:27:43,446:INFO:K Neighbors Classifier Imported successfully
2025-06-22 17:27:43,446:INFO:Starting cross validation
2025-06-22 17:27:43,447:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:27:49,379:INFO:Calculating mean and std
2025-06-22 17:27:49,379:INFO:Creating metrics dataframe
2025-06-22 17:27:49,379:INFO:Uploading results into container
2025-06-22 17:27:49,379:INFO:Uploading model into container now
2025-06-22 17:27:49,379:INFO:_master_model_container: 2
2025-06-22 17:27:49,379:INFO:_display_container: 2
2025-06-22 17:27:49,379:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-22 17:27:49,379:INFO:create_model() successfully completed......................................
2025-06-22 17:27:49,600:INFO:SubProcess create_model() end ==================================
2025-06-22 17:27:49,600:INFO:Creating metrics dataframe
2025-06-22 17:27:49,602:INFO:Initializing Naive Bayes
2025-06-22 17:27:49,602:INFO:Total runtime is 0.227164363861084 minutes
2025-06-22 17:27:49,602:INFO:SubProcess create_model() called ==================================
2025-06-22 17:27:49,604:INFO:Initializing create_model()
2025-06-22 17:27:49,604:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:27:49,604:INFO:Checking exceptions
2025-06-22 17:27:49,604:INFO:Importing libraries
2025-06-22 17:27:49,604:INFO:Copying training dataset
2025-06-22 17:27:49,608:INFO:Defining folds
2025-06-22 17:27:49,608:INFO:Declaring metric variables
2025-06-22 17:27:49,608:INFO:Importing untrained model
2025-06-22 17:27:49,608:INFO:Naive Bayes Imported successfully
2025-06-22 17:27:49,608:INFO:Starting cross validation
2025-06-22 17:27:49,611:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:27:49,824:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:49,824:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:49,824:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:49,848:INFO:Calculating mean and std
2025-06-22 17:27:49,849:INFO:Creating metrics dataframe
2025-06-22 17:27:49,850:INFO:Uploading results into container
2025-06-22 17:27:49,851:INFO:Uploading model into container now
2025-06-22 17:27:49,851:INFO:_master_model_container: 3
2025-06-22 17:27:49,851:INFO:_display_container: 2
2025-06-22 17:27:49,852:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-22 17:27:49,852:INFO:create_model() successfully completed......................................
2025-06-22 17:27:50,054:INFO:SubProcess create_model() end ==================================
2025-06-22 17:27:50,054:INFO:Creating metrics dataframe
2025-06-22 17:27:50,054:INFO:Initializing Decision Tree Classifier
2025-06-22 17:27:50,054:INFO:Total runtime is 0.234700075785319 minutes
2025-06-22 17:27:50,054:INFO:SubProcess create_model() called ==================================
2025-06-22 17:27:50,054:INFO:Initializing create_model()
2025-06-22 17:27:50,054:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:27:50,054:INFO:Checking exceptions
2025-06-22 17:27:50,054:INFO:Importing libraries
2025-06-22 17:27:50,054:INFO:Copying training dataset
2025-06-22 17:27:50,054:INFO:Defining folds
2025-06-22 17:27:50,054:INFO:Declaring metric variables
2025-06-22 17:27:50,054:INFO:Importing untrained model
2025-06-22 17:27:50,070:INFO:Decision Tree Classifier Imported successfully
2025-06-22 17:27:50,071:INFO:Starting cross validation
2025-06-22 17:27:50,072:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:27:50,256:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:50,258:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:50,262:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:50,266:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:50,267:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:50,271:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:50,272:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:50,274:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:50,274:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:50,274:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:50,290:INFO:Calculating mean and std
2025-06-22 17:27:50,290:INFO:Creating metrics dataframe
2025-06-22 17:27:50,292:INFO:Uploading results into container
2025-06-22 17:27:50,293:INFO:Uploading model into container now
2025-06-22 17:27:50,293:INFO:_master_model_container: 4
2025-06-22 17:27:50,293:INFO:_display_container: 2
2025-06-22 17:27:50,294:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5052, splitter='best')
2025-06-22 17:27:50,294:INFO:create_model() successfully completed......................................
2025-06-22 17:27:50,497:INFO:SubProcess create_model() end ==================================
2025-06-22 17:27:50,498:INFO:Creating metrics dataframe
2025-06-22 17:27:50,501:INFO:Initializing SVM - Linear Kernel
2025-06-22 17:27:50,501:INFO:Total runtime is 0.24214274883270265 minutes
2025-06-22 17:27:50,501:INFO:SubProcess create_model() called ==================================
2025-06-22 17:27:50,501:INFO:Initializing create_model()
2025-06-22 17:27:50,501:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:27:50,502:INFO:Checking exceptions
2025-06-22 17:27:50,502:INFO:Importing libraries
2025-06-22 17:27:50,502:INFO:Copying training dataset
2025-06-22 17:27:50,506:INFO:Defining folds
2025-06-22 17:27:50,506:INFO:Declaring metric variables
2025-06-22 17:27:50,507:INFO:Importing untrained model
2025-06-22 17:27:50,507:INFO:SVM - Linear Kernel Imported successfully
2025-06-22 17:27:50,507:INFO:Starting cross validation
2025-06-22 17:27:50,507:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:27:50,773:INFO:Calculating mean and std
2025-06-22 17:27:50,773:INFO:Creating metrics dataframe
2025-06-22 17:27:50,777:INFO:Uploading results into container
2025-06-22 17:27:50,777:INFO:Uploading model into container now
2025-06-22 17:27:50,777:INFO:_master_model_container: 5
2025-06-22 17:27:50,777:INFO:_display_container: 2
2025-06-22 17:27:50,779:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5052, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-22 17:27:50,779:INFO:create_model() successfully completed......................................
2025-06-22 17:27:51,008:INFO:SubProcess create_model() end ==================================
2025-06-22 17:27:51,008:INFO:Creating metrics dataframe
2025-06-22 17:27:51,013:INFO:Initializing Ridge Classifier
2025-06-22 17:27:51,013:INFO:Total runtime is 0.25067477623621626 minutes
2025-06-22 17:27:51,013:INFO:SubProcess create_model() called ==================================
2025-06-22 17:27:51,013:INFO:Initializing create_model()
2025-06-22 17:27:51,013:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:27:51,014:INFO:Checking exceptions
2025-06-22 17:27:51,014:INFO:Importing libraries
2025-06-22 17:27:51,014:INFO:Copying training dataset
2025-06-22 17:27:51,020:INFO:Defining folds
2025-06-22 17:27:51,021:INFO:Declaring metric variables
2025-06-22 17:27:51,021:INFO:Importing untrained model
2025-06-22 17:27:51,021:INFO:Ridge Classifier Imported successfully
2025-06-22 17:27:51,021:INFO:Starting cross validation
2025-06-22 17:27:51,023:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:27:51,255:INFO:Calculating mean and std
2025-06-22 17:27:51,256:INFO:Creating metrics dataframe
2025-06-22 17:27:51,258:INFO:Uploading results into container
2025-06-22 17:27:51,259:INFO:Uploading model into container now
2025-06-22 17:27:51,259:INFO:_master_model_container: 6
2025-06-22 17:27:51,259:INFO:_display_container: 2
2025-06-22 17:27:51,259:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5052, solver='auto',
                tol=0.0001)
2025-06-22 17:27:51,259:INFO:create_model() successfully completed......................................
2025-06-22 17:27:51,477:INFO:SubProcess create_model() end ==================================
2025-06-22 17:27:51,477:INFO:Creating metrics dataframe
2025-06-22 17:27:51,480:INFO:Initializing Random Forest Classifier
2025-06-22 17:27:51,480:INFO:Total runtime is 0.25845299164454144 minutes
2025-06-22 17:27:51,481:INFO:SubProcess create_model() called ==================================
2025-06-22 17:27:51,481:INFO:Initializing create_model()
2025-06-22 17:27:51,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:27:51,481:INFO:Checking exceptions
2025-06-22 17:27:51,481:INFO:Importing libraries
2025-06-22 17:27:51,481:INFO:Copying training dataset
2025-06-22 17:27:51,486:INFO:Defining folds
2025-06-22 17:27:51,486:INFO:Declaring metric variables
2025-06-22 17:27:51,487:INFO:Importing untrained model
2025-06-22 17:27:51,487:INFO:Random Forest Classifier Imported successfully
2025-06-22 17:27:51,487:INFO:Starting cross validation
2025-06-22 17:27:51,489:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:27:51,989:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:51,990:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:51,993:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:51,994:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,004:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,005:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,029:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,029:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,030:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,075:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,096:INFO:Calculating mean and std
2025-06-22 17:27:52,098:INFO:Creating metrics dataframe
2025-06-22 17:27:52,100:INFO:Uploading results into container
2025-06-22 17:27:52,101:INFO:Uploading model into container now
2025-06-22 17:27:52,102:INFO:_master_model_container: 7
2025-06-22 17:27:52,102:INFO:_display_container: 2
2025-06-22 17:27:52,102:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5052, verbose=0,
                       warm_start=False)
2025-06-22 17:27:52,102:INFO:create_model() successfully completed......................................
2025-06-22 17:27:52,316:INFO:SubProcess create_model() end ==================================
2025-06-22 17:27:52,316:INFO:Creating metrics dataframe
2025-06-22 17:27:52,318:INFO:Initializing Quadratic Discriminant Analysis
2025-06-22 17:27:52,318:INFO:Total runtime is 0.272430153687795 minutes
2025-06-22 17:27:52,318:INFO:SubProcess create_model() called ==================================
2025-06-22 17:27:52,319:INFO:Initializing create_model()
2025-06-22 17:27:52,319:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:27:52,319:INFO:Checking exceptions
2025-06-22 17:27:52,319:INFO:Importing libraries
2025-06-22 17:27:52,319:INFO:Copying training dataset
2025-06-22 17:27:52,325:INFO:Defining folds
2025-06-22 17:27:52,325:INFO:Declaring metric variables
2025-06-22 17:27:52,325:INFO:Importing untrained model
2025-06-22 17:27:52,325:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-22 17:27:52,325:INFO:Starting cross validation
2025-06-22 17:27:52,327:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:27:52,473:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:27:52,473:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:27:52,473:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:27:52,473:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:27:52,473:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:27:52,473:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:27:52,473:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:27:52,477:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:27:52,519:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,526:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,526:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,527:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,530:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,531:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,532:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,533:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,533:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,537:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,550:INFO:Calculating mean and std
2025-06-22 17:27:52,552:INFO:Creating metrics dataframe
2025-06-22 17:27:52,554:INFO:Uploading results into container
2025-06-22 17:27:52,554:INFO:Uploading model into container now
2025-06-22 17:27:52,555:INFO:_master_model_container: 8
2025-06-22 17:27:52,555:INFO:_display_container: 2
2025-06-22 17:27:52,555:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-22 17:27:52,555:INFO:create_model() successfully completed......................................
2025-06-22 17:27:52,788:INFO:SubProcess create_model() end ==================================
2025-06-22 17:27:52,788:INFO:Creating metrics dataframe
2025-06-22 17:27:52,792:INFO:Initializing Ada Boost Classifier
2025-06-22 17:27:52,792:INFO:Total runtime is 0.2803222378094991 minutes
2025-06-22 17:27:52,792:INFO:SubProcess create_model() called ==================================
2025-06-22 17:27:52,792:INFO:Initializing create_model()
2025-06-22 17:27:52,792:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:27:52,792:INFO:Checking exceptions
2025-06-22 17:27:52,792:INFO:Importing libraries
2025-06-22 17:27:52,792:INFO:Copying training dataset
2025-06-22 17:27:52,797:INFO:Defining folds
2025-06-22 17:27:52,797:INFO:Declaring metric variables
2025-06-22 17:27:52,797:INFO:Importing untrained model
2025-06-22 17:27:52,798:INFO:Ada Boost Classifier Imported successfully
2025-06-22 17:27:52,798:INFO:Starting cross validation
2025-06-22 17:27:52,799:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:27:52,935:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:27:52,935:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:27:52,940:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:27:52,942:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:27:52,944:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:27:52,945:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:27:52,953:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:27:52,992:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,992:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,992:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,994:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,994:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:52,997:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,000:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,008:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,008:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,009:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,021:INFO:Calculating mean and std
2025-06-22 17:27:53,022:INFO:Creating metrics dataframe
2025-06-22 17:27:53,025:INFO:Uploading results into container
2025-06-22 17:27:53,025:INFO:Uploading model into container now
2025-06-22 17:27:53,026:INFO:_master_model_container: 9
2025-06-22 17:27:53,026:INFO:_display_container: 2
2025-06-22 17:27:53,026:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5052)
2025-06-22 17:27:53,026:INFO:create_model() successfully completed......................................
2025-06-22 17:27:53,235:INFO:SubProcess create_model() end ==================================
2025-06-22 17:27:53,235:INFO:Creating metrics dataframe
2025-06-22 17:27:53,238:INFO:Initializing Gradient Boosting Classifier
2025-06-22 17:27:53,238:INFO:Total runtime is 0.2877600828806559 minutes
2025-06-22 17:27:53,238:INFO:SubProcess create_model() called ==================================
2025-06-22 17:27:53,238:INFO:Initializing create_model()
2025-06-22 17:27:53,238:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:27:53,238:INFO:Checking exceptions
2025-06-22 17:27:53,238:INFO:Importing libraries
2025-06-22 17:27:53,239:INFO:Copying training dataset
2025-06-22 17:27:53,243:INFO:Defining folds
2025-06-22 17:27:53,243:INFO:Declaring metric variables
2025-06-22 17:27:53,243:INFO:Importing untrained model
2025-06-22 17:27:53,245:INFO:Gradient Boosting Classifier Imported successfully
2025-06-22 17:27:53,245:INFO:Starting cross validation
2025-06-22 17:27:53,246:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:27:53,531:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,543:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,550:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,551:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,554:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,557:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,560:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,565:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,571:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,573:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,583:INFO:Calculating mean and std
2025-06-22 17:27:53,584:INFO:Creating metrics dataframe
2025-06-22 17:27:53,586:INFO:Uploading results into container
2025-06-22 17:27:53,586:INFO:Uploading model into container now
2025-06-22 17:27:53,587:INFO:_master_model_container: 10
2025-06-22 17:27:53,587:INFO:_display_container: 2
2025-06-22 17:27:53,587:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5052, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-22 17:27:53,587:INFO:create_model() successfully completed......................................
2025-06-22 17:27:53,794:INFO:SubProcess create_model() end ==================================
2025-06-22 17:27:53,794:INFO:Creating metrics dataframe
2025-06-22 17:27:53,797:INFO:Initializing Linear Discriminant Analysis
2025-06-22 17:27:53,797:INFO:Total runtime is 0.2970782399177551 minutes
2025-06-22 17:27:53,798:INFO:SubProcess create_model() called ==================================
2025-06-22 17:27:53,798:INFO:Initializing create_model()
2025-06-22 17:27:53,798:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:27:53,798:INFO:Checking exceptions
2025-06-22 17:27:53,798:INFO:Importing libraries
2025-06-22 17:27:53,798:INFO:Copying training dataset
2025-06-22 17:27:53,802:INFO:Defining folds
2025-06-22 17:27:53,802:INFO:Declaring metric variables
2025-06-22 17:27:53,802:INFO:Importing untrained model
2025-06-22 17:27:53,803:INFO:Linear Discriminant Analysis Imported successfully
2025-06-22 17:27:53,803:INFO:Starting cross validation
2025-06-22 17:27:53,805:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:27:53,996:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,997:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:53,998:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:54,005:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:54,011:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:54,011:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:54,013:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:54,013:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:54,019:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:27:54,034:INFO:Calculating mean and std
2025-06-22 17:27:54,035:INFO:Creating metrics dataframe
2025-06-22 17:27:54,037:INFO:Uploading results into container
2025-06-22 17:27:54,037:INFO:Uploading model into container now
2025-06-22 17:27:54,039:INFO:_master_model_container: 11
2025-06-22 17:27:54,039:INFO:_display_container: 2
2025-06-22 17:27:54,039:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-22 17:27:54,039:INFO:create_model() successfully completed......................................
2025-06-22 17:27:54,279:INFO:SubProcess create_model() end ==================================
2025-06-22 17:27:54,279:INFO:Creating metrics dataframe
2025-06-22 17:27:54,281:INFO:Initializing Extra Trees Classifier
2025-06-22 17:27:54,281:INFO:Total runtime is 0.30514920155207315 minutes
2025-06-22 17:27:54,281:INFO:SubProcess create_model() called ==================================
2025-06-22 17:27:54,282:INFO:Initializing create_model()
2025-06-22 17:27:54,282:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:27:54,282:INFO:Checking exceptions
2025-06-22 17:27:54,282:INFO:Importing libraries
2025-06-22 17:27:54,282:INFO:Copying training dataset
2025-06-22 17:27:54,287:INFO:Defining folds
2025-06-22 17:27:54,287:INFO:Declaring metric variables
2025-06-22 17:27:54,287:INFO:Importing untrained model
2025-06-22 17:27:54,287:INFO:Extra Trees Classifier Imported successfully
2025-06-22 17:27:54,288:INFO:Starting cross validation
2025-06-22 17:27:54,289:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:27:54,750:INFO:Calculating mean and std
2025-06-22 17:27:54,751:INFO:Creating metrics dataframe
2025-06-22 17:27:54,753:INFO:Uploading results into container
2025-06-22 17:27:54,753:INFO:Uploading model into container now
2025-06-22 17:27:54,754:INFO:_master_model_container: 12
2025-06-22 17:27:54,754:INFO:_display_container: 2
2025-06-22 17:27:54,754:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5052, verbose=0,
                     warm_start=False)
2025-06-22 17:27:54,755:INFO:create_model() successfully completed......................................
2025-06-22 17:27:54,959:INFO:SubProcess create_model() end ==================================
2025-06-22 17:27:54,960:INFO:Creating metrics dataframe
2025-06-22 17:27:54,963:INFO:Initializing Extreme Gradient Boosting
2025-06-22 17:27:54,963:INFO:Total runtime is 0.3165112495422363 minutes
2025-06-22 17:27:54,963:INFO:SubProcess create_model() called ==================================
2025-06-22 17:27:54,964:INFO:Initializing create_model()
2025-06-22 17:27:54,964:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:27:54,964:INFO:Checking exceptions
2025-06-22 17:27:54,964:INFO:Importing libraries
2025-06-22 17:27:54,964:INFO:Copying training dataset
2025-06-22 17:27:54,969:INFO:Defining folds
2025-06-22 17:27:54,969:INFO:Declaring metric variables
2025-06-22 17:27:54,969:INFO:Importing untrained model
2025-06-22 17:27:54,973:INFO:Extreme Gradient Boosting Imported successfully
2025-06-22 17:27:54,973:INFO:Starting cross validation
2025-06-22 17:27:54,975:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:28:01,761:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:01,763:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:01,776:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:01,904:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:02,094:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:02,413:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:03,681:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
2 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
2 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\core.py", line 729, in inner_f
    return func(**kwargs)
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\sklearn.py", line 1663, in fit
    train_dmatrix, evals = _wrap_evaluation_matrices(
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\sklearn.py", line 628, in _wrap_evaluation_matrices
    train_dmatrix = create_dmatrix(
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\sklearn.py", line 1137, in _create_dmatrix
    return QuantileDMatrix(
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\core.py", line 729, in inner_f
    return func(**kwargs)
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\core.py", line 1614, in __init__
    self._init(
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\core.py", line 1678, in _init
    it.reraise()
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\core.py", line 572, in reraise
    raise exc  # pylint: disable=raising-bad-type
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\core.py", line 553, in _handle_exception
    return fn()
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\core.py", line 640, in <lambda>
    return self._handle_exception(lambda: int(self.next(input_data)), 0)
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\data.py", line 1654, in next
    input_data(**self.kwargs)
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\core.py", line 729, in inner_f
    return func(**kwargs)
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\core.py", line 629, in input_data
    self.proxy.set_info(
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\core.py", line 729, in inner_f
    return func(**kwargs)
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\core.py", line 961, in set_info
    self.set_label(label)
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\core.py", line 1099, in set_label
    dispatch_meta_backend(self, label, "label", "float")
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\data.py", line 1603, in dispatch_meta_backend
    _meta_from_pandas_series(data, name, dtype, handle)
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\data.py", line 713, in _meta_from_pandas_series
    _meta_from_numpy(data, name, dtype, handle)
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\data.py", line 1533, in _meta_from_numpy
    _check_call(_LIB.XGDMatrixSetInfoFromInterface(handle, c_str(field), interface_str))
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\xgboost\core.py", line 310, in _check_call
    raise XGBoostError(py_str(_LIB.XGBGetLastError()))
xgboost.core.XGBoostError: [17:28:02] C:\actions-runner\_work\xgboost\xgboost\src\data\array_interface.cu:44: Check failed: err == cudaGetLastError() (0 vs. 46) : 


2025-06-22 17:28:03,682:INFO:Calculating mean and std
2025-06-22 17:28:03,684:INFO:Creating metrics dataframe
2025-06-22 17:28:03,688:INFO:Uploading results into container
2025-06-22 17:28:03,688:INFO:Uploading model into container now
2025-06-22 17:28:03,689:INFO:_master_model_container: 13
2025-06-22 17:28:03,689:INFO:_display_container: 2
2025-06-22 17:28:03,690:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-06-22 17:28:03,690:INFO:create_model() successfully completed......................................
2025-06-22 17:28:03,914:INFO:SubProcess create_model() end ==================================
2025-06-22 17:28:03,914:INFO:Creating metrics dataframe
2025-06-22 17:28:03,918:INFO:Initializing Light Gradient Boosting Machine
2025-06-22 17:28:03,918:INFO:Total runtime is 0.46576117277145385 minutes
2025-06-22 17:28:03,918:INFO:SubProcess create_model() called ==================================
2025-06-22 17:28:03,919:INFO:Initializing create_model()
2025-06-22 17:28:03,919:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:28:03,919:INFO:Checking exceptions
2025-06-22 17:28:03,919:INFO:Importing libraries
2025-06-22 17:28:03,919:INFO:Copying training dataset
2025-06-22 17:28:03,922:INFO:Defining folds
2025-06-22 17:28:03,923:INFO:Declaring metric variables
2025-06-22 17:28:03,923:INFO:Importing untrained model
2025-06-22 17:28:03,923:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-22 17:28:03,923:INFO:Starting cross validation
2025-06-22 17:28:03,924:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:28:04,820:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:04,825:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:04,838:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:04,881:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:04,905:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:04,905:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:04,945:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:04,966:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:04,980:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:09,511:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:09,529:INFO:Calculating mean and std
2025-06-22 17:28:09,530:INFO:Creating metrics dataframe
2025-06-22 17:28:09,531:INFO:Uploading results into container
2025-06-22 17:28:09,532:INFO:Uploading model into container now
2025-06-22 17:28:09,533:INFO:_master_model_container: 14
2025-06-22 17:28:09,533:INFO:_display_container: 2
2025-06-22 17:28:09,533:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5052, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-22 17:28:09,533:INFO:create_model() successfully completed......................................
2025-06-22 17:28:09,731:INFO:SubProcess create_model() end ==================================
2025-06-22 17:28:09,731:INFO:Creating metrics dataframe
2025-06-22 17:28:09,734:INFO:Initializing CatBoost Classifier
2025-06-22 17:28:09,734:INFO:Total runtime is 0.5626892685890198 minutes
2025-06-22 17:28:09,734:INFO:SubProcess create_model() called ==================================
2025-06-22 17:28:09,734:INFO:Initializing create_model()
2025-06-22 17:28:09,734:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:28:09,734:INFO:Checking exceptions
2025-06-22 17:28:09,734:INFO:Importing libraries
2025-06-22 17:28:09,734:INFO:Copying training dataset
2025-06-22 17:28:09,737:INFO:Defining folds
2025-06-22 17:28:09,737:INFO:Declaring metric variables
2025-06-22 17:28:09,737:INFO:Importing untrained model
2025-06-22 17:28:09,745:INFO:CatBoost Classifier Imported successfully
2025-06-22 17:28:09,745:INFO:Starting cross validation
2025-06-22 17:28:09,746:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:28:12,812:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:12,913:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:12,952:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:16,127:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:16,128:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:16,146:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\model_selection\_validation.py:547: FitFailedWarning: 
5 fits failed out of a total of 10.
The score on these train-test partitions for these parameters will be set to 0.0.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
5 fits failed with the following error:
Traceback (most recent call last):
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\catboost\core.py", line 5245, in fit
    self._fit(X, y, cat_features, text_features, embedding_features, None, graph, sample_weight, None, None, None, None, baseline, use_best_model,
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\catboost\core.py", line 2410, in _fit
    self._train(
  File "C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\catboost\core.py", line 1790, in _train
    self._object._train(train_pool, test_pool, params, allow_clear_pool, init_model._object if init_model else None)
  File "_catboost.pyx", line 5023, in _catboost._CatBoost._train
  File "_catboost.pyx", line 5072, in _catboost._CatBoost._train
_catboost.CatBoostError: catboost/libs/train_lib/dir_helper.cpp:20: Can't create train working dir: catboost_info


2025-06-22 17:28:16,147:INFO:Calculating mean and std
2025-06-22 17:28:16,148:INFO:Creating metrics dataframe
2025-06-22 17:28:16,151:INFO:Uploading results into container
2025-06-22 17:28:16,151:INFO:Uploading model into container now
2025-06-22 17:28:16,152:INFO:_master_model_container: 15
2025-06-22 17:28:16,152:INFO:_display_container: 2
2025-06-22 17:28:16,152:INFO:<catboost.core.CatBoostClassifier object at 0x000001F2869FB340>
2025-06-22 17:28:16,152:INFO:create_model() successfully completed......................................
2025-06-22 17:28:16,351:INFO:SubProcess create_model() end ==================================
2025-06-22 17:28:16,351:INFO:Creating metrics dataframe
2025-06-22 17:28:16,353:INFO:Initializing Dummy Classifier
2025-06-22 17:28:16,353:INFO:Total runtime is 0.6730150938034057 minutes
2025-06-22 17:28:16,353:INFO:SubProcess create_model() called ==================================
2025-06-22 17:28:16,354:INFO:Initializing create_model()
2025-06-22 17:28:16,354:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F28A3F9240>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:28:16,354:INFO:Checking exceptions
2025-06-22 17:28:16,354:INFO:Importing libraries
2025-06-22 17:28:16,354:INFO:Copying training dataset
2025-06-22 17:28:16,357:INFO:Defining folds
2025-06-22 17:28:16,357:INFO:Declaring metric variables
2025-06-22 17:28:16,357:INFO:Importing untrained model
2025-06-22 17:28:16,358:INFO:Dummy Classifier Imported successfully
2025-06-22 17:28:16,358:INFO:Starting cross validation
2025-06-22 17:28:16,359:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:28:16,503:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:16,513:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:16,517:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:16,518:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:16,520:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:16,525:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:16,525:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:16,526:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:16,533:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:16,534:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:28:16,538:INFO:Calculating mean and std
2025-06-22 17:28:16,538:INFO:Creating metrics dataframe
2025-06-22 17:28:16,541:INFO:Uploading results into container
2025-06-22 17:28:16,541:INFO:Uploading model into container now
2025-06-22 17:28:16,541:INFO:_master_model_container: 16
2025-06-22 17:28:16,541:INFO:_display_container: 2
2025-06-22 17:28:16,541:INFO:DummyClassifier(constant=None, random_state=5052, strategy='prior')
2025-06-22 17:28:16,542:INFO:create_model() successfully completed......................................
2025-06-22 17:28:16,740:INFO:SubProcess create_model() end ==================================
2025-06-22 17:28:16,741:INFO:Creating metrics dataframe
2025-06-22 17:28:16,745:INFO:Initializing create_model()
2025-06-22 17:28:16,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F2E8934940>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5052, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:28:16,745:INFO:Checking exceptions
2025-06-22 17:28:16,746:INFO:Importing libraries
2025-06-22 17:28:16,746:INFO:Copying training dataset
2025-06-22 17:28:16,749:INFO:Defining folds
2025-06-22 17:28:16,749:INFO:Declaring metric variables
2025-06-22 17:28:16,749:INFO:Importing untrained model
2025-06-22 17:28:16,750:INFO:Declaring custom model
2025-06-22 17:28:16,750:INFO:Logistic Regression Imported successfully
2025-06-22 17:28:16,751:INFO:Cross validation set to False
2025-06-22 17:28:16,751:INFO:Fitting Model
2025-06-22 17:28:16,871:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2025-06-22 17:28:16,871:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5052, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-22 17:28:16,871:INFO:create_model() successfully completed......................................
2025-06-22 17:28:17,067:INFO:_master_model_container: 16
2025-06-22 17:28:17,067:INFO:_display_container: 2
2025-06-22 17:28:17,067:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5052, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-22 17:28:17,067:INFO:compare_models() successfully completed......................................
2025-06-22 17:40:09,242:INFO:PyCaret ClassificationExperiment
2025-06-22 17:40:09,242:INFO:Logging name: clf-default-name
2025-06-22 17:40:09,242:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-22 17:40:09,242:INFO:version 3.3.2
2025-06-22 17:40:09,242:INFO:Initializing setup()
2025-06-22 17:40:09,242:INFO:self.USI: 83f5
2025-06-22 17:40:09,243:INFO:self._variable_keys: {'y_test', 'seed', 'exp_id', 'fold_groups_param', 'exp_name_log', 'is_multiclass', 'gpu_param', 'target_param', 'y', 'data', 'n_jobs_param', 'gpu_n_jobs_param', 'pipeline', 'memory', 'html_param', 'USI', 'X', 'fold_shuffle_param', 'logging_param', '_ml_usecase', '_available_plots', 'X_test', 'y_train', 'fold_generator', 'idx', 'log_plots_param', 'X_train', 'fix_imbalance'}
2025-06-22 17:40:09,243:INFO:Checking environment
2025-06-22 17:40:09,243:INFO:python_version: 3.10.11
2025-06-22 17:40:09,243:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-22 17:40:09,243:INFO:machine: AMD64
2025-06-22 17:40:09,243:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-22 17:40:09,250:INFO:Memory: svmem(total=16312721408, available=6259126272, percent=61.6, used=10053595136, free=6259126272)
2025-06-22 17:40:09,250:INFO:Physical Core: 6
2025-06-22 17:40:09,251:INFO:Logical Core: 12
2025-06-22 17:40:09,251:INFO:Checking libraries
2025-06-22 17:40:09,251:INFO:System:
2025-06-22 17:40:09,251:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-22 17:40:09,251:INFO:executable: C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\Scripts\python.exe
2025-06-22 17:40:09,251:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-22 17:40:09,251:INFO:PyCaret required dependencies:
2025-06-22 17:40:09,251:INFO:                 pip: 23.0.1
2025-06-22 17:40:09,251:INFO:          setuptools: 65.5.0
2025-06-22 17:40:09,251:INFO:             pycaret: 3.3.2
2025-06-22 17:40:09,251:INFO:             IPython: 8.37.0
2025-06-22 17:40:09,251:INFO:          ipywidgets: 8.1.7
2025-06-22 17:40:09,251:INFO:                tqdm: 4.67.1
2025-06-22 17:40:09,251:INFO:               numpy: 1.23.5
2025-06-22 17:40:09,251:INFO:              pandas: 2.0.3
2025-06-22 17:40:09,251:INFO:              jinja2: 3.1.6
2025-06-22 17:40:09,251:INFO:               scipy: 1.11.4
2025-06-22 17:40:09,251:INFO:              joblib: 1.3.2
2025-06-22 17:40:09,251:INFO:             sklearn: 1.4.2
2025-06-22 17:40:09,251:INFO:                pyod: 2.0.5
2025-06-22 17:40:09,252:INFO:            imblearn: 0.13.0
2025-06-22 17:40:09,252:INFO:   category_encoders: 2.7.0
2025-06-22 17:40:09,252:INFO:            lightgbm: 4.6.0
2025-06-22 17:40:09,252:INFO:               numba: 0.56.4
2025-06-22 17:40:09,252:INFO:            requests: 2.32.4
2025-06-22 17:40:09,252:INFO:          matplotlib: 3.5.3
2025-06-22 17:40:09,252:INFO:          scikitplot: 0.3.7
2025-06-22 17:40:09,252:INFO:         yellowbrick: 1.5
2025-06-22 17:40:09,252:INFO:              plotly: 5.24.1
2025-06-22 17:40:09,252:INFO:    plotly-resampler: Not installed
2025-06-22 17:40:09,252:INFO:             kaleido: 1.0.0
2025-06-22 17:40:09,252:INFO:           schemdraw: 0.15
2025-06-22 17:40:09,252:INFO:         statsmodels: 0.14.4
2025-06-22 17:40:09,252:INFO:              sktime: 0.26.0
2025-06-22 17:40:09,252:INFO:               tbats: 1.1.3
2025-06-22 17:40:09,252:INFO:            pmdarima: 2.0.4
2025-06-22 17:40:09,252:INFO:              psutil: 7.0.0
2025-06-22 17:40:09,252:INFO:          markupsafe: 3.0.2
2025-06-22 17:40:09,252:INFO:             pickle5: Not installed
2025-06-22 17:40:09,252:INFO:         cloudpickle: 3.1.1
2025-06-22 17:40:09,252:INFO:         deprecation: 2.1.0
2025-06-22 17:40:09,252:INFO:              xxhash: 3.5.0
2025-06-22 17:40:09,252:INFO:           wurlitzer: Not installed
2025-06-22 17:40:09,252:INFO:PyCaret optional dependencies:
2025-06-22 17:40:09,252:INFO:                shap: 0.44.1
2025-06-22 17:40:09,252:INFO:           interpret: 0.6.12
2025-06-22 17:40:09,252:INFO:                umap: 0.5.7
2025-06-22 17:40:09,252:INFO:     ydata_profiling: 4.16.1
2025-06-22 17:40:09,252:INFO:  explainerdashboard: 0.5.1
2025-06-22 17:40:09,252:INFO:             autoviz: Not installed
2025-06-22 17:40:09,252:INFO:           fairlearn: 0.7.0
2025-06-22 17:40:09,252:INFO:          deepchecks: Not installed
2025-06-22 17:40:09,253:INFO:             xgboost: 3.0.2
2025-06-22 17:40:09,253:INFO:            catboost: 1.2.8
2025-06-22 17:40:09,253:INFO:              kmodes: 0.12.2
2025-06-22 17:40:09,253:INFO:             mlxtend: 0.23.4
2025-06-22 17:40:09,253:INFO:       statsforecast: 1.5.0
2025-06-22 17:40:09,253:INFO:        tune_sklearn: Not installed
2025-06-22 17:40:09,253:INFO:                 ray: Not installed
2025-06-22 17:40:09,253:INFO:            hyperopt: 0.2.7
2025-06-22 17:40:09,253:INFO:              optuna: 4.4.0
2025-06-22 17:40:09,253:INFO:               skopt: 0.10.2
2025-06-22 17:40:09,253:INFO:              mlflow: 3.1.0
2025-06-22 17:40:09,253:INFO:              gradio: 5.34.2
2025-06-22 17:40:09,253:INFO:             fastapi: 0.115.13
2025-06-22 17:40:09,253:INFO:             uvicorn: 0.34.3
2025-06-22 17:40:09,253:INFO:              m2cgen: 0.10.0
2025-06-22 17:40:09,253:INFO:           evidently: 0.4.40
2025-06-22 17:40:09,253:INFO:               fugue: 0.8.7
2025-06-22 17:40:09,253:INFO:           streamlit: 1.46.0
2025-06-22 17:40:09,253:INFO:             prophet: Not installed
2025-06-22 17:40:09,253:INFO:None
2025-06-22 17:40:09,253:INFO:Set up data.
2025-06-22 17:40:09,265:INFO:Set up folding strategy.
2025-06-22 17:40:09,266:INFO:Set up train/test split.
2025-06-22 17:40:09,276:INFO:Set up index.
2025-06-22 17:40:09,276:INFO:Assigning column types.
2025-06-22 17:40:09,280:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-22 17:40:09,333:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-22 17:40:09,334:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:40:09,368:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:40:09,371:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:40:09,424:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-22 17:40:09,425:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:40:09,456:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:40:09,459:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:40:09,459:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-22 17:40:09,513:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:40:09,548:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:40:09,552:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:40:09,605:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-22 17:40:09,640:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:40:09,643:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:40:09,644:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-22 17:40:09,728:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:40:09,731:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:40:09,816:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:40:09,819:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:40:09,820:INFO:Preparing preprocessing pipeline...
2025-06-22 17:40:09,823:INFO:Set up simple imputation.
2025-06-22 17:40:09,826:INFO:Set up encoding of ordinal features.
2025-06-22 17:40:09,828:INFO:Set up encoding of categorical features.
2025-06-22 17:40:09,948:INFO:Finished creating preprocessing pipeline.
2025-06-22 17:40:09,968:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\taish\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Name', 'Ticket'],
                                    transformer=TargetEncoder(cols=['Name',
                                                                    'Ticket'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-06-22 17:40:09,969:INFO:Creating final display dataframe.
2025-06-22 17:40:10,389:INFO:Setup _display_container:                     Description             Value
0                    Session id              1707
1                        Target          Survived
2                   Target type            Binary
3           Original data shape         (891, 11)
4        Transformed data shape         (891, 13)
5   Transformed train set shape         (623, 13)
6    Transformed test set shape         (268, 13)
7              Numeric features                 6
8          Categorical features                 4
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              83f5
2025-06-22 17:40:10,473:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:40:10,476:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:40:10,570:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-22 17:40:10,573:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-22 17:40:10,575:INFO:setup() successfully completed in 1.34s...............
2025-06-22 17:40:10,581:INFO:Initializing compare_models()
2025-06-22 17:40:10,581:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-22 17:40:10,582:INFO:Checking exceptions
2025-06-22 17:40:10,587:INFO:Preparing display monitor
2025-06-22 17:40:10,588:INFO:Initializing Logistic Regression
2025-06-22 17:40:10,589:INFO:Total runtime is 2.143383026123047e-05 minutes
2025-06-22 17:40:10,589:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:10,589:INFO:Initializing create_model()
2025-06-22 17:40:10,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:10,589:INFO:Checking exceptions
2025-06-22 17:40:10,589:INFO:Importing libraries
2025-06-22 17:40:10,589:INFO:Copying training dataset
2025-06-22 17:40:10,594:INFO:Defining folds
2025-06-22 17:40:10,594:INFO:Declaring metric variables
2025-06-22 17:40:10,594:INFO:Importing untrained model
2025-06-22 17:40:10,594:INFO:Logistic Regression Imported successfully
2025-06-22 17:40:10,595:INFO:Starting cross validation
2025-06-22 17:40:10,596:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:16,570:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:40:16,581:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:40:16,622:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:40:16,628:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:40:16,631:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:40:16,634:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:40:16,635:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:40:16,639:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:40:16,657:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:40:16,692:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2025-06-22 17:40:16,753:INFO:Calculating mean and std
2025-06-22 17:40:16,755:INFO:Creating metrics dataframe
2025-06-22 17:40:16,757:INFO:Uploading results into container
2025-06-22 17:40:16,758:INFO:Uploading model into container now
2025-06-22 17:40:16,759:INFO:_master_model_container: 1
2025-06-22 17:40:16,759:INFO:_display_container: 2
2025-06-22 17:40:16,760:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1707, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-22 17:40:16,760:INFO:create_model() successfully completed......................................
2025-06-22 17:40:16,965:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:16,965:INFO:Creating metrics dataframe
2025-06-22 17:40:16,982:INFO:Initializing K Neighbors Classifier
2025-06-22 17:40:16,982:INFO:Total runtime is 0.10656877358754477 minutes
2025-06-22 17:40:16,982:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:16,982:INFO:Initializing create_model()
2025-06-22 17:40:16,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:16,982:INFO:Checking exceptions
2025-06-22 17:40:16,982:INFO:Importing libraries
2025-06-22 17:40:16,982:INFO:Copying training dataset
2025-06-22 17:40:16,982:INFO:Defining folds
2025-06-22 17:40:16,982:INFO:Declaring metric variables
2025-06-22 17:40:16,982:INFO:Importing untrained model
2025-06-22 17:40:16,982:INFO:K Neighbors Classifier Imported successfully
2025-06-22 17:40:16,982:INFO:Starting cross validation
2025-06-22 17:40:16,990:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:21,914:INFO:Calculating mean and std
2025-06-22 17:40:21,915:INFO:Creating metrics dataframe
2025-06-22 17:40:21,917:INFO:Uploading results into container
2025-06-22 17:40:21,917:INFO:Uploading model into container now
2025-06-22 17:40:21,918:INFO:_master_model_container: 2
2025-06-22 17:40:21,918:INFO:_display_container: 2
2025-06-22 17:40:21,918:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-22 17:40:21,918:INFO:create_model() successfully completed......................................
2025-06-22 17:40:22,142:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:22,142:INFO:Creating metrics dataframe
2025-06-22 17:40:22,146:INFO:Initializing Naive Bayes
2025-06-22 17:40:22,146:INFO:Total runtime is 0.19263767401377363 minutes
2025-06-22 17:40:22,146:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:22,146:INFO:Initializing create_model()
2025-06-22 17:40:22,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:22,146:INFO:Checking exceptions
2025-06-22 17:40:22,146:INFO:Importing libraries
2025-06-22 17:40:22,146:INFO:Copying training dataset
2025-06-22 17:40:22,153:INFO:Defining folds
2025-06-22 17:40:22,153:INFO:Declaring metric variables
2025-06-22 17:40:22,153:INFO:Importing untrained model
2025-06-22 17:40:22,153:INFO:Naive Bayes Imported successfully
2025-06-22 17:40:22,154:INFO:Starting cross validation
2025-06-22 17:40:22,156:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:22,351:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:22,354:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:22,355:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:22,357:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:22,366:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:22,382:INFO:Calculating mean and std
2025-06-22 17:40:22,383:INFO:Creating metrics dataframe
2025-06-22 17:40:22,385:INFO:Uploading results into container
2025-06-22 17:40:22,386:INFO:Uploading model into container now
2025-06-22 17:40:22,386:INFO:_master_model_container: 3
2025-06-22 17:40:22,386:INFO:_display_container: 2
2025-06-22 17:40:22,386:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-22 17:40:22,386:INFO:create_model() successfully completed......................................
2025-06-22 17:40:22,589:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:22,589:INFO:Creating metrics dataframe
2025-06-22 17:40:22,592:INFO:Initializing Decision Tree Classifier
2025-06-22 17:40:22,592:INFO:Total runtime is 0.20006068547566735 minutes
2025-06-22 17:40:22,592:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:22,592:INFO:Initializing create_model()
2025-06-22 17:40:22,593:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:22,593:INFO:Checking exceptions
2025-06-22 17:40:22,593:INFO:Importing libraries
2025-06-22 17:40:22,593:INFO:Copying training dataset
2025-06-22 17:40:22,597:INFO:Defining folds
2025-06-22 17:40:22,597:INFO:Declaring metric variables
2025-06-22 17:40:22,598:INFO:Importing untrained model
2025-06-22 17:40:22,598:INFO:Decision Tree Classifier Imported successfully
2025-06-22 17:40:22,598:INFO:Starting cross validation
2025-06-22 17:40:22,600:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:22,786:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:22,787:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:22,789:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:22,793:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:22,794:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:22,798:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:22,800:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:22,802:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:22,803:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:22,810:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:22,816:INFO:Calculating mean and std
2025-06-22 17:40:22,818:INFO:Creating metrics dataframe
2025-06-22 17:40:22,820:INFO:Uploading results into container
2025-06-22 17:40:22,820:INFO:Uploading model into container now
2025-06-22 17:40:22,821:INFO:_master_model_container: 4
2025-06-22 17:40:22,821:INFO:_display_container: 2
2025-06-22 17:40:22,821:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1707, splitter='best')
2025-06-22 17:40:22,821:INFO:create_model() successfully completed......................................
2025-06-22 17:40:23,023:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:23,023:INFO:Creating metrics dataframe
2025-06-22 17:40:23,029:INFO:Initializing SVM - Linear Kernel
2025-06-22 17:40:23,029:INFO:Total runtime is 0.2073510090510051 minutes
2025-06-22 17:40:23,029:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:23,030:INFO:Initializing create_model()
2025-06-22 17:40:23,030:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:23,030:INFO:Checking exceptions
2025-06-22 17:40:23,030:INFO:Importing libraries
2025-06-22 17:40:23,030:INFO:Copying training dataset
2025-06-22 17:40:23,035:INFO:Defining folds
2025-06-22 17:40:23,035:INFO:Declaring metric variables
2025-06-22 17:40:23,035:INFO:Importing untrained model
2025-06-22 17:40:23,036:INFO:SVM - Linear Kernel Imported successfully
2025-06-22 17:40:23,036:INFO:Starting cross validation
2025-06-22 17:40:23,038:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:23,267:INFO:Calculating mean and std
2025-06-22 17:40:23,268:INFO:Creating metrics dataframe
2025-06-22 17:40:23,269:INFO:Uploading results into container
2025-06-22 17:40:23,270:INFO:Uploading model into container now
2025-06-22 17:40:23,270:INFO:_master_model_container: 5
2025-06-22 17:40:23,270:INFO:_display_container: 2
2025-06-22 17:40:23,271:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1707, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-22 17:40:23,271:INFO:create_model() successfully completed......................................
2025-06-22 17:40:23,476:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:23,476:INFO:Creating metrics dataframe
2025-06-22 17:40:23,477:INFO:Initializing Ridge Classifier
2025-06-22 17:40:23,477:INFO:Total runtime is 0.2148102720578512 minutes
2025-06-22 17:40:23,477:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:23,477:INFO:Initializing create_model()
2025-06-22 17:40:23,477:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:23,477:INFO:Checking exceptions
2025-06-22 17:40:23,477:INFO:Importing libraries
2025-06-22 17:40:23,477:INFO:Copying training dataset
2025-06-22 17:40:23,477:INFO:Defining folds
2025-06-22 17:40:23,477:INFO:Declaring metric variables
2025-06-22 17:40:23,477:INFO:Importing untrained model
2025-06-22 17:40:23,477:INFO:Ridge Classifier Imported successfully
2025-06-22 17:40:23,477:INFO:Starting cross validation
2025-06-22 17:40:23,477:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:23,708:INFO:Calculating mean and std
2025-06-22 17:40:23,708:INFO:Creating metrics dataframe
2025-06-22 17:40:23,708:INFO:Uploading results into container
2025-06-22 17:40:23,708:INFO:Uploading model into container now
2025-06-22 17:40:23,708:INFO:_master_model_container: 6
2025-06-22 17:40:23,708:INFO:_display_container: 2
2025-06-22 17:40:23,708:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1707, solver='auto',
                tol=0.0001)
2025-06-22 17:40:23,708:INFO:create_model() successfully completed......................................
2025-06-22 17:40:23,901:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:23,901:INFO:Creating metrics dataframe
2025-06-22 17:40:23,917:INFO:Initializing Random Forest Classifier
2025-06-22 17:40:23,917:INFO:Total runtime is 0.2221473296483358 minutes
2025-06-22 17:40:23,917:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:23,917:INFO:Initializing create_model()
2025-06-22 17:40:23,917:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:23,917:INFO:Checking exceptions
2025-06-22 17:40:23,917:INFO:Importing libraries
2025-06-22 17:40:23,917:INFO:Copying training dataset
2025-06-22 17:40:23,917:INFO:Defining folds
2025-06-22 17:40:23,924:INFO:Declaring metric variables
2025-06-22 17:40:23,924:INFO:Importing untrained model
2025-06-22 17:40:23,924:INFO:Random Forest Classifier Imported successfully
2025-06-22 17:40:23,924:INFO:Starting cross validation
2025-06-22 17:40:23,924:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:24,409:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,409:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,409:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,409:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,409:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,427:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,427:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,427:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,427:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,432:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,450:INFO:Calculating mean and std
2025-06-22 17:40:24,451:INFO:Creating metrics dataframe
2025-06-22 17:40:24,451:INFO:Uploading results into container
2025-06-22 17:40:24,453:INFO:Uploading model into container now
2025-06-22 17:40:24,453:INFO:_master_model_container: 7
2025-06-22 17:40:24,453:INFO:_display_container: 2
2025-06-22 17:40:24,453:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1707, verbose=0,
                       warm_start=False)
2025-06-22 17:40:24,453:INFO:create_model() successfully completed......................................
2025-06-22 17:40:24,659:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:24,659:INFO:Creating metrics dataframe
2025-06-22 17:40:24,663:INFO:Initializing Quadratic Discriminant Analysis
2025-06-22 17:40:24,663:INFO:Total runtime is 0.2345747272173564 minutes
2025-06-22 17:40:24,663:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:24,664:INFO:Initializing create_model()
2025-06-22 17:40:24,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:24,664:INFO:Checking exceptions
2025-06-22 17:40:24,664:INFO:Importing libraries
2025-06-22 17:40:24,664:INFO:Copying training dataset
2025-06-22 17:40:24,668:INFO:Defining folds
2025-06-22 17:40:24,669:INFO:Declaring metric variables
2025-06-22 17:40:24,669:INFO:Importing untrained model
2025-06-22 17:40:24,669:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-22 17:40:24,669:INFO:Starting cross validation
2025-06-22 17:40:24,671:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:24,796:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:40:24,800:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:40:24,808:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:40:24,810:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:40:24,812:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:40:24,816:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:40:24,820:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:40:24,822:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:40:24,825:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-22 17:40:24,854:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,859:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,869:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,869:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,870:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,876:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,877:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,878:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,880:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,882:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:24,899:INFO:Calculating mean and std
2025-06-22 17:40:24,900:INFO:Creating metrics dataframe
2025-06-22 17:40:24,902:INFO:Uploading results into container
2025-06-22 17:40:24,902:INFO:Uploading model into container now
2025-06-22 17:40:24,903:INFO:_master_model_container: 8
2025-06-22 17:40:24,903:INFO:_display_container: 2
2025-06-22 17:40:24,903:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-22 17:40:24,903:INFO:create_model() successfully completed......................................
2025-06-22 17:40:25,109:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:25,109:INFO:Creating metrics dataframe
2025-06-22 17:40:25,112:INFO:Initializing Ada Boost Classifier
2025-06-22 17:40:25,112:INFO:Total runtime is 0.24205834865570072 minutes
2025-06-22 17:40:25,113:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:25,113:INFO:Initializing create_model()
2025-06-22 17:40:25,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:25,113:INFO:Checking exceptions
2025-06-22 17:40:25,113:INFO:Importing libraries
2025-06-22 17:40:25,113:INFO:Copying training dataset
2025-06-22 17:40:25,118:INFO:Defining folds
2025-06-22 17:40:25,118:INFO:Declaring metric variables
2025-06-22 17:40:25,118:INFO:Importing untrained model
2025-06-22 17:40:25,119:INFO:Ada Boost Classifier Imported successfully
2025-06-22 17:40:25,119:INFO:Starting cross validation
2025-06-22 17:40:25,120:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:25,243:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:40:25,249:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:40:25,251:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:40:25,252:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:40:25,255:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:40:25,258:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:40:25,264:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:40:25,271:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:40:25,274:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:40:25,274:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-22 17:40:25,306:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,308:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,309:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,312:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,317:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,323:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,323:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,327:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,328:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,335:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,354:INFO:Calculating mean and std
2025-06-22 17:40:25,355:INFO:Creating metrics dataframe
2025-06-22 17:40:25,358:INFO:Uploading results into container
2025-06-22 17:40:25,359:INFO:Uploading model into container now
2025-06-22 17:40:25,359:INFO:_master_model_container: 9
2025-06-22 17:40:25,359:INFO:_display_container: 2
2025-06-22 17:40:25,359:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1707)
2025-06-22 17:40:25,359:INFO:create_model() successfully completed......................................
2025-06-22 17:40:25,560:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:25,560:INFO:Creating metrics dataframe
2025-06-22 17:40:25,563:INFO:Initializing Gradient Boosting Classifier
2025-06-22 17:40:25,563:INFO:Total runtime is 0.24957927862803145 minutes
2025-06-22 17:40:25,563:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:25,563:INFO:Initializing create_model()
2025-06-22 17:40:25,563:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:25,563:INFO:Checking exceptions
2025-06-22 17:40:25,563:INFO:Importing libraries
2025-06-22 17:40:25,564:INFO:Copying training dataset
2025-06-22 17:40:25,568:INFO:Defining folds
2025-06-22 17:40:25,568:INFO:Declaring metric variables
2025-06-22 17:40:25,568:INFO:Importing untrained model
2025-06-22 17:40:25,569:INFO:Gradient Boosting Classifier Imported successfully
2025-06-22 17:40:25,569:INFO:Starting cross validation
2025-06-22 17:40:25,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:25,860:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,862:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,870:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,884:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,884:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,893:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,895:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,897:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,897:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,901:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:25,918:INFO:Calculating mean and std
2025-06-22 17:40:25,919:INFO:Creating metrics dataframe
2025-06-22 17:40:25,921:INFO:Uploading results into container
2025-06-22 17:40:25,921:INFO:Uploading model into container now
2025-06-22 17:40:25,922:INFO:_master_model_container: 10
2025-06-22 17:40:25,922:INFO:_display_container: 2
2025-06-22 17:40:25,922:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1707, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-22 17:40:25,922:INFO:create_model() successfully completed......................................
2025-06-22 17:40:26,133:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:26,133:INFO:Creating metrics dataframe
2025-06-22 17:40:26,136:INFO:Initializing Linear Discriminant Analysis
2025-06-22 17:40:26,136:INFO:Total runtime is 0.2591309189796448 minutes
2025-06-22 17:40:26,136:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:26,136:INFO:Initializing create_model()
2025-06-22 17:40:26,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:26,137:INFO:Checking exceptions
2025-06-22 17:40:26,137:INFO:Importing libraries
2025-06-22 17:40:26,137:INFO:Copying training dataset
2025-06-22 17:40:26,144:INFO:Defining folds
2025-06-22 17:40:26,144:INFO:Declaring metric variables
2025-06-22 17:40:26,146:INFO:Importing untrained model
2025-06-22 17:40:26,146:INFO:Linear Discriminant Analysis Imported successfully
2025-06-22 17:40:26,146:INFO:Starting cross validation
2025-06-22 17:40:26,147:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:26,335:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:26,340:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:26,340:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:26,341:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:26,344:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:26,347:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:26,352:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:26,356:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:26,366:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:26,387:INFO:Calculating mean and std
2025-06-22 17:40:26,388:INFO:Creating metrics dataframe
2025-06-22 17:40:26,390:INFO:Uploading results into container
2025-06-22 17:40:26,391:INFO:Uploading model into container now
2025-06-22 17:40:26,391:INFO:_master_model_container: 11
2025-06-22 17:40:26,391:INFO:_display_container: 2
2025-06-22 17:40:26,391:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-22 17:40:26,392:INFO:create_model() successfully completed......................................
2025-06-22 17:40:26,596:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:26,596:INFO:Creating metrics dataframe
2025-06-22 17:40:26,599:INFO:Initializing Extra Trees Classifier
2025-06-22 17:40:26,599:INFO:Total runtime is 0.2668453772862753 minutes
2025-06-22 17:40:26,599:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:26,600:INFO:Initializing create_model()
2025-06-22 17:40:26,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:26,600:INFO:Checking exceptions
2025-06-22 17:40:26,600:INFO:Importing libraries
2025-06-22 17:40:26,600:INFO:Copying training dataset
2025-06-22 17:40:26,605:INFO:Defining folds
2025-06-22 17:40:26,605:INFO:Declaring metric variables
2025-06-22 17:40:26,605:INFO:Importing untrained model
2025-06-22 17:40:26,605:INFO:Extra Trees Classifier Imported successfully
2025-06-22 17:40:26,606:INFO:Starting cross validation
2025-06-22 17:40:26,607:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:27,093:INFO:Calculating mean and std
2025-06-22 17:40:27,094:INFO:Creating metrics dataframe
2025-06-22 17:40:27,096:INFO:Uploading results into container
2025-06-22 17:40:27,096:INFO:Uploading model into container now
2025-06-22 17:40:27,097:INFO:_master_model_container: 12
2025-06-22 17:40:27,097:INFO:_display_container: 2
2025-06-22 17:40:27,097:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1707, verbose=0,
                     warm_start=False)
2025-06-22 17:40:27,097:INFO:create_model() successfully completed......................................
2025-06-22 17:40:27,301:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:27,301:INFO:Creating metrics dataframe
2025-06-22 17:40:27,305:INFO:Initializing Extreme Gradient Boosting
2025-06-22 17:40:27,305:INFO:Total runtime is 0.27860837777455655 minutes
2025-06-22 17:40:27,305:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:27,306:INFO:Initializing create_model()
2025-06-22 17:40:27,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:27,306:INFO:Checking exceptions
2025-06-22 17:40:27,306:INFO:Importing libraries
2025-06-22 17:40:27,306:INFO:Copying training dataset
2025-06-22 17:40:27,311:INFO:Defining folds
2025-06-22 17:40:27,311:INFO:Declaring metric variables
2025-06-22 17:40:27,311:INFO:Importing untrained model
2025-06-22 17:40:27,312:INFO:Extreme Gradient Boosting Imported successfully
2025-06-22 17:40:27,312:INFO:Starting cross validation
2025-06-22 17:40:27,313:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:31,615:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:31,704:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:31,719:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:31,744:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:31,745:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:31,750:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:31,754:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:31,796:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:31,797:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:31,799:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:32,494:INFO:Calculating mean and std
2025-06-22 17:40:32,496:INFO:Creating metrics dataframe
2025-06-22 17:40:32,499:INFO:Uploading results into container
2025-06-22 17:40:32,500:INFO:Uploading model into container now
2025-06-22 17:40:32,500:INFO:_master_model_container: 13
2025-06-22 17:40:32,500:INFO:_display_container: 2
2025-06-22 17:40:32,501:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-06-22 17:40:32,501:INFO:create_model() successfully completed......................................
2025-06-22 17:40:32,747:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:32,747:INFO:Creating metrics dataframe
2025-06-22 17:40:32,750:INFO:Initializing Light Gradient Boosting Machine
2025-06-22 17:40:32,750:INFO:Total runtime is 0.3693689664204916 minutes
2025-06-22 17:40:32,750:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:32,750:INFO:Initializing create_model()
2025-06-22 17:40:32,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:32,750:INFO:Checking exceptions
2025-06-22 17:40:32,750:INFO:Importing libraries
2025-06-22 17:40:32,750:INFO:Copying training dataset
2025-06-22 17:40:32,755:INFO:Defining folds
2025-06-22 17:40:32,756:INFO:Declaring metric variables
2025-06-22 17:40:32,756:INFO:Importing untrained model
2025-06-22 17:40:32,757:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-22 17:40:32,757:INFO:Starting cross validation
2025-06-22 17:40:32,759:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:33,311:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:33,313:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:33,542:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:33,553:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:33,816:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:33,928:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:34,186:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:34,270:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:34,994:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\joblib\externals\loky\process_executor.py:752: UserWarning: A worker stopped while some jobs were given to the executor. This can be caused by a too short worker timeout or by a memory leak.

2025-06-22 17:40:37,954:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:37,968:INFO:Calculating mean and std
2025-06-22 17:40:37,969:INFO:Creating metrics dataframe
2025-06-22 17:40:37,972:INFO:Uploading results into container
2025-06-22 17:40:37,972:INFO:Uploading model into container now
2025-06-22 17:40:37,973:INFO:_master_model_container: 14
2025-06-22 17:40:37,973:INFO:_display_container: 2
2025-06-22 17:40:37,974:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1707, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-22 17:40:37,974:INFO:create_model() successfully completed......................................
2025-06-22 17:40:38,217:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:38,217:INFO:Creating metrics dataframe
2025-06-22 17:40:38,220:INFO:Initializing CatBoost Classifier
2025-06-22 17:40:38,220:INFO:Total runtime is 0.4605315764745077 minutes
2025-06-22 17:40:38,220:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:38,221:INFO:Initializing create_model()
2025-06-22 17:40:38,221:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:38,221:INFO:Checking exceptions
2025-06-22 17:40:38,221:INFO:Importing libraries
2025-06-22 17:40:38,221:INFO:Copying training dataset
2025-06-22 17:40:38,226:INFO:Defining folds
2025-06-22 17:40:38,226:INFO:Declaring metric variables
2025-06-22 17:40:38,226:INFO:Importing untrained model
2025-06-22 17:40:38,226:INFO:CatBoost Classifier Imported successfully
2025-06-22 17:40:38,227:INFO:Starting cross validation
2025-06-22 17:40:38,228:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:41,265:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:42,640:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:43,008:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:43,104:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:47,432:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:47,668:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:47,864:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:48,726:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:48,790:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:48,957:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:48,972:INFO:Calculating mean and std
2025-06-22 17:40:48,972:INFO:Creating metrics dataframe
2025-06-22 17:40:48,972:INFO:Uploading results into container
2025-06-22 17:40:48,972:INFO:Uploading model into container now
2025-06-22 17:40:48,972:INFO:_master_model_container: 15
2025-06-22 17:40:48,972:INFO:_display_container: 2
2025-06-22 17:40:48,972:INFO:<catboost.core.CatBoostClassifier object at 0x000001F283A225F0>
2025-06-22 17:40:48,972:INFO:create_model() successfully completed......................................
2025-06-22 17:40:49,199:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:49,199:INFO:Creating metrics dataframe
2025-06-22 17:40:49,199:INFO:Initializing Dummy Classifier
2025-06-22 17:40:49,199:INFO:Total runtime is 0.6435086528460185 minutes
2025-06-22 17:40:49,199:INFO:SubProcess create_model() called ==================================
2025-06-22 17:40:49,199:INFO:Initializing create_model()
2025-06-22 17:40:49,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F2F2477CA0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:49,199:INFO:Checking exceptions
2025-06-22 17:40:49,199:INFO:Importing libraries
2025-06-22 17:40:49,199:INFO:Copying training dataset
2025-06-22 17:40:49,214:INFO:Defining folds
2025-06-22 17:40:49,214:INFO:Declaring metric variables
2025-06-22 17:40:49,214:INFO:Importing untrained model
2025-06-22 17:40:49,214:INFO:Dummy Classifier Imported successfully
2025-06-22 17:40:49,214:INFO:Starting cross validation
2025-06-22 17:40:49,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-22 17:40:49,408:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:49,416:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:49,420:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:49,428:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:49,428:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:49,430:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:49,440:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:49,443:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:55,325:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-22 17:40:55,348:INFO:Calculating mean and std
2025-06-22 17:40:55,349:INFO:Creating metrics dataframe
2025-06-22 17:40:55,351:INFO:Uploading results into container
2025-06-22 17:40:55,352:INFO:Uploading model into container now
2025-06-22 17:40:55,352:INFO:_master_model_container: 16
2025-06-22 17:40:55,352:INFO:_display_container: 2
2025-06-22 17:40:55,353:INFO:DummyClassifier(constant=None, random_state=1707, strategy='prior')
2025-06-22 17:40:55,353:INFO:create_model() successfully completed......................................
2025-06-22 17:40:55,566:INFO:SubProcess create_model() end ==================================
2025-06-22 17:40:55,566:INFO:Creating metrics dataframe
2025-06-22 17:40:55,571:INFO:Initializing create_model()
2025-06-22 17:40:55,571:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1707, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-22 17:40:55,571:INFO:Checking exceptions
2025-06-22 17:40:55,572:INFO:Importing libraries
2025-06-22 17:40:55,572:INFO:Copying training dataset
2025-06-22 17:40:55,577:INFO:Defining folds
2025-06-22 17:40:55,577:INFO:Declaring metric variables
2025-06-22 17:40:55,577:INFO:Importing untrained model
2025-06-22 17:40:55,577:INFO:Declaring custom model
2025-06-22 17:40:55,577:INFO:Logistic Regression Imported successfully
2025-06-22 17:40:55,579:INFO:Cross validation set to False
2025-06-22 17:40:55,580:INFO:Fitting Model
2025-06-22 17:40:55,772:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\linear_model\_logistic.py:469: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression

2025-06-22 17:40:55,773:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1707, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-22 17:40:55,773:INFO:create_model() successfully completed......................................
2025-06-22 17:40:55,995:INFO:_master_model_container: 16
2025-06-22 17:40:55,995:INFO:_display_container: 2
2025-06-22 17:40:55,995:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1707, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-22 17:40:55,995:INFO:compare_models() successfully completed......................................
2025-06-22 17:40:56,005:INFO:Initializing predict_model()
2025-06-22 17:40:56,006:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001F283DE4940>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1707, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001F2F45A7EB0>)
2025-06-22 17:40:56,006:INFO:Checking exceptions
2025-06-22 17:40:56,006:INFO:Preloading libraries
2025-06-22 17:40:56,502:INFO:Initializing save_model()
2025-06-22 17:40:56,502:INFO:save_model(model=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1707, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\taish\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_...
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None, include=['Name', 'Ticket'],
                                    transformer=TargetEncoder(cols=['Name',
                                                                    'Ticket'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-22 17:40:56,503:INFO:Adding model into prep_pipe
2025-06-22 17:40:56,512:INFO:best_model.pkl saved in current working directory
2025-06-22 17:40:56,536:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['PassengerId', 'Pclass', 'Age',
                                             'SibSp', 'Parch', 'Fare'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None...
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('trained_model',
                 LogisticRegression(C=1.0, class_weight=None, dual=False,
                                    fit_intercept=True, intercept_scaling=1,
                                    l1_ratio=None, max_iter=1000,
                                    multi_class='auto', n_jobs=None,
                                    penalty='l2', random_state=1707,
                                    solver='lbfgs', tol=0.0001, verbose=0,
                                    warm_start=False))],
         verbose=False)
2025-06-22 17:40:56,536:INFO:save_model() successfully completed......................................
2025-06-23 17:35:36,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-23 17:35:36,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-23 17:35:36,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-23 17:35:36,001:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-23 17:38:36,353:INFO:PyCaret ClassificationExperiment
2025-06-23 17:38:36,354:INFO:Logging name: clf-default-name
2025-06-23 17:38:36,354:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2025-06-23 17:38:36,354:INFO:version 3.3.2
2025-06-23 17:38:36,354:INFO:Initializing setup()
2025-06-23 17:38:36,354:INFO:self.USI: 175a
2025-06-23 17:38:36,354:INFO:self._variable_keys: {'idx', 'exp_id', 'fold_groups_param', 'gpu_n_jobs_param', 'memory', 'data', 'is_multiclass', 'exp_name_log', 'X_test', 'html_param', 'fix_imbalance', '_ml_usecase', 'seed', 'y', 'log_plots_param', 'logging_param', '_available_plots', 'fold_generator', 'USI', 'X_train', 'gpu_param', 'pipeline', 'y_test', 'n_jobs_param', 'X', 'fold_shuffle_param', 'y_train', 'target_param'}
2025-06-23 17:38:36,354:INFO:Checking environment
2025-06-23 17:38:36,354:INFO:python_version: 3.10.11
2025-06-23 17:38:36,354:INFO:python_build: ('tags/v3.10.11:7d4cc5a', 'Apr  5 2023 00:38:17')
2025-06-23 17:38:36,354:INFO:machine: AMD64
2025-06-23 17:38:36,379:INFO:platform: Windows-10-10.0.26100-SP0
2025-06-23 17:38:36,387:INFO:Memory: svmem(total=16312721408, available=4294479872, percent=73.7, used=12018241536, free=4294479872)
2025-06-23 17:38:36,387:INFO:Physical Core: 6
2025-06-23 17:38:36,387:INFO:Logical Core: 12
2025-06-23 17:38:36,387:INFO:Checking libraries
2025-06-23 17:38:36,387:INFO:System:
2025-06-23 17:38:36,387:INFO:    python: 3.10.11 (tags/v3.10.11:7d4cc5a, Apr  5 2023, 00:38:17) [MSC v.1929 64 bit (AMD64)]
2025-06-23 17:38:36,387:INFO:executable: C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\Scripts\python.exe
2025-06-23 17:38:36,387:INFO:   machine: Windows-10-10.0.26100-SP0
2025-06-23 17:38:36,387:INFO:PyCaret required dependencies:
2025-06-23 17:38:37,568:INFO:                 pip: 23.0.1
2025-06-23 17:38:37,568:INFO:          setuptools: 65.5.0
2025-06-23 17:38:37,569:INFO:             pycaret: 3.3.2
2025-06-23 17:38:37,569:INFO:             IPython: 8.37.0
2025-06-23 17:38:37,569:INFO:          ipywidgets: 8.1.7
2025-06-23 17:38:37,569:INFO:                tqdm: 4.67.1
2025-06-23 17:38:37,569:INFO:               numpy: 1.23.5
2025-06-23 17:38:37,569:INFO:              pandas: 2.0.3
2025-06-23 17:38:37,569:INFO:              jinja2: 3.1.6
2025-06-23 17:38:37,569:INFO:               scipy: 1.11.4
2025-06-23 17:38:37,569:INFO:              joblib: 1.3.2
2025-06-23 17:38:37,569:INFO:             sklearn: 1.4.2
2025-06-23 17:38:37,569:INFO:                pyod: 2.0.5
2025-06-23 17:38:37,569:INFO:            imblearn: 0.13.0
2025-06-23 17:38:37,569:INFO:   category_encoders: 2.7.0
2025-06-23 17:38:37,569:INFO:            lightgbm: 4.6.0
2025-06-23 17:38:37,569:INFO:               numba: 0.56.4
2025-06-23 17:38:37,569:INFO:            requests: 2.32.4
2025-06-23 17:38:37,569:INFO:          matplotlib: 3.5.3
2025-06-23 17:38:37,569:INFO:          scikitplot: 0.3.7
2025-06-23 17:38:37,569:INFO:         yellowbrick: 1.5
2025-06-23 17:38:37,569:INFO:              plotly: 5.24.1
2025-06-23 17:38:37,569:INFO:    plotly-resampler: Not installed
2025-06-23 17:38:37,570:INFO:             kaleido: 1.0.0
2025-06-23 17:38:37,570:INFO:           schemdraw: 0.15
2025-06-23 17:38:37,570:INFO:         statsmodels: 0.14.4
2025-06-23 17:38:37,570:INFO:              sktime: 0.26.0
2025-06-23 17:38:37,570:INFO:               tbats: 1.1.3
2025-06-23 17:38:37,570:INFO:            pmdarima: 2.0.4
2025-06-23 17:38:37,570:INFO:              psutil: 7.0.0
2025-06-23 17:38:37,570:INFO:          markupsafe: 3.0.2
2025-06-23 17:38:37,570:INFO:             pickle5: Not installed
2025-06-23 17:38:37,570:INFO:         cloudpickle: 3.1.1
2025-06-23 17:38:37,570:INFO:         deprecation: 2.1.0
2025-06-23 17:38:37,570:INFO:              xxhash: 3.5.0
2025-06-23 17:38:37,570:INFO:           wurlitzer: Not installed
2025-06-23 17:38:37,570:INFO:PyCaret optional dependencies:
2025-06-23 17:38:42,408:INFO:                shap: 0.44.1
2025-06-23 17:38:42,408:INFO:           interpret: 0.6.12
2025-06-23 17:38:42,408:INFO:                umap: 0.5.7
2025-06-23 17:38:42,408:INFO:     ydata_profiling: 4.16.1
2025-06-23 17:38:42,408:INFO:  explainerdashboard: 0.5.1
2025-06-23 17:38:42,408:INFO:             autoviz: Not installed
2025-06-23 17:38:42,408:INFO:           fairlearn: 0.7.0
2025-06-23 17:38:42,408:INFO:          deepchecks: Not installed
2025-06-23 17:38:42,408:INFO:             xgboost: 3.0.2
2025-06-23 17:38:42,408:INFO:            catboost: 1.2.8
2025-06-23 17:38:42,408:INFO:              kmodes: 0.12.2
2025-06-23 17:38:42,408:INFO:             mlxtend: 0.23.4
2025-06-23 17:38:42,408:INFO:       statsforecast: 1.5.0
2025-06-23 17:38:42,408:INFO:        tune_sklearn: Not installed
2025-06-23 17:38:42,408:INFO:                 ray: Not installed
2025-06-23 17:38:42,410:INFO:            hyperopt: 0.2.7
2025-06-23 17:38:42,410:INFO:              optuna: 4.4.0
2025-06-23 17:38:42,410:INFO:               skopt: 0.10.2
2025-06-23 17:38:42,410:INFO:              mlflow: 3.1.0
2025-06-23 17:38:42,410:INFO:              gradio: 5.34.2
2025-06-23 17:38:42,410:INFO:             fastapi: 0.115.13
2025-06-23 17:38:42,410:INFO:             uvicorn: 0.34.3
2025-06-23 17:38:42,410:INFO:              m2cgen: 0.10.0
2025-06-23 17:38:42,410:INFO:           evidently: 0.4.40
2025-06-23 17:38:42,410:INFO:               fugue: 0.8.7
2025-06-23 17:38:42,410:INFO:           streamlit: 1.46.0
2025-06-23 17:38:42,410:INFO:             prophet: Not installed
2025-06-23 17:38:42,410:INFO:None
2025-06-23 17:38:42,410:INFO:Set up data.
2025-06-23 17:38:42,443:INFO:Set up folding strategy.
2025-06-23 17:38:42,445:INFO:Set up train/test split.
2025-06-23 17:38:42,468:INFO:Set up index.
2025-06-23 17:38:42,468:INFO:Assigning column types.
2025-06-23 17:38:42,473:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2025-06-23 17:38:42,531:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-23 17:38:42,536:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-23 17:38:42,582:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-23 17:38:42,586:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-23 17:38:42,778:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2025-06-23 17:38:42,778:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-23 17:38:42,812:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-23 17:38:42,816:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-23 17:38:42,816:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2025-06-23 17:38:42,882:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-23 17:38:42,915:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-23 17:38:42,921:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-23 17:38:42,978:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2025-06-23 17:38:43,012:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-23 17:38:43,017:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-23 17:38:43,017:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2025-06-23 17:38:43,108:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-23 17:38:43,113:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-23 17:38:43,206:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-23 17:38:43,209:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-23 17:38:43,211:INFO:Preparing preprocessing pipeline...
2025-06-23 17:38:43,242:INFO:Set up label encoding.
2025-06-23 17:38:43,242:INFO:Set up simple imputation.
2025-06-23 17:38:43,253:INFO:Set up encoding of ordinal features.
2025-06-23 17:38:43,262:INFO:Set up encoding of categorical features.
2025-06-23 17:38:43,941:INFO:Finished creating preprocessing pipeline.
2025-06-23 17:38:44,017:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\taish\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SeniorCitizen', 'tenure',
                                             'MonthlyCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              f...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['customerID', 'TotalCharges'],
                                    transformer=TargetEncoder(cols=['customerID',
                                                                    'TotalCharges'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2025-06-23 17:38:44,017:INFO:Creating final display dataframe.
2025-06-23 17:38:45,311:INFO:Setup _display_container:                     Description             Value
0                    Session id              6279
1                        Target             Churn
2                   Target type            Binary
3                Target mapping     No: 0, Yes: 1
4           Original data shape        (7043, 21)
5        Transformed data shape        (7043, 42)
6   Transformed train set shape        (4930, 42)
7    Transformed test set shape        (2113, 42)
8              Numeric features                 3
9          Categorical features                17
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator   StratifiedKFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  clf-default-name
22                          USI              175a
2025-06-23 17:38:45,406:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-23 17:38:45,411:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-23 17:38:45,502:INFO:Soft dependency imported: xgboost: 3.0.2
2025-06-23 17:38:45,502:INFO:Soft dependency imported: catboost: 1.2.8
2025-06-23 17:38:45,510:INFO:setup() successfully completed in 9.19s...............
2025-06-23 17:38:45,548:INFO:Initializing compare_models()
2025-06-23 17:38:45,548:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2025-06-23 17:38:45,551:INFO:Checking exceptions
2025-06-23 17:38:45,555:INFO:Preparing display monitor
2025-06-23 17:38:45,560:INFO:Initializing Logistic Regression
2025-06-23 17:38:45,560:INFO:Total runtime is 0.0 minutes
2025-06-23 17:38:45,560:INFO:SubProcess create_model() called ==================================
2025-06-23 17:38:45,561:INFO:Initializing create_model()
2025-06-23 17:38:45,561:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:38:45,561:INFO:Checking exceptions
2025-06-23 17:38:45,561:INFO:Importing libraries
2025-06-23 17:38:45,561:INFO:Copying training dataset
2025-06-23 17:38:45,571:INFO:Defining folds
2025-06-23 17:38:45,571:INFO:Declaring metric variables
2025-06-23 17:38:45,571:INFO:Importing untrained model
2025-06-23 17:38:45,571:INFO:Logistic Regression Imported successfully
2025-06-23 17:38:45,571:INFO:Starting cross validation
2025-06-23 17:38:45,578:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:38:52,808:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,815:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,820:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,825:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,832:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,838:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,848:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,855:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,861:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,861:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,868:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,874:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,877:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,882:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,884:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,887:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,888:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,890:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,894:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,897:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,900:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,907:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,912:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,913:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,914:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,918:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,919:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,920:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,924:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,925:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:52,939:INFO:Calculating mean and std
2025-06-23 17:38:52,939:INFO:Creating metrics dataframe
2025-06-23 17:38:52,943:INFO:Uploading results into container
2025-06-23 17:38:52,944:INFO:Uploading model into container now
2025-06-23 17:38:52,945:INFO:_master_model_container: 1
2025-06-23 17:38:52,945:INFO:_display_container: 2
2025-06-23 17:38:52,946:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6279, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2025-06-23 17:38:52,946:INFO:create_model() successfully completed......................................
2025-06-23 17:38:53,186:INFO:SubProcess create_model() end ==================================
2025-06-23 17:38:53,186:INFO:Creating metrics dataframe
2025-06-23 17:38:53,190:INFO:Initializing K Neighbors Classifier
2025-06-23 17:38:53,190:INFO:Total runtime is 0.12716144323349 minutes
2025-06-23 17:38:53,190:INFO:SubProcess create_model() called ==================================
2025-06-23 17:38:53,190:INFO:Initializing create_model()
2025-06-23 17:38:53,190:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:38:53,190:INFO:Checking exceptions
2025-06-23 17:38:53,191:INFO:Importing libraries
2025-06-23 17:38:53,191:INFO:Copying training dataset
2025-06-23 17:38:53,198:INFO:Defining folds
2025-06-23 17:38:53,198:INFO:Declaring metric variables
2025-06-23 17:38:53,199:INFO:Importing untrained model
2025-06-23 17:38:53,199:INFO:K Neighbors Classifier Imported successfully
2025-06-23 17:38:53,200:INFO:Starting cross validation
2025-06-23 17:38:53,203:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:38:53,774:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,780:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,787:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,798:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,799:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,806:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,806:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,807:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,811:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,816:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,816:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,816:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,819:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,823:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,824:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,828:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,830:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,830:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,836:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,837:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,838:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,843:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,844:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:38:53,853:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:00,307:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:00,309:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:00,317:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:00,318:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:00,325:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:00,327:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:00,357:INFO:Calculating mean and std
2025-06-23 17:39:00,358:INFO:Creating metrics dataframe
2025-06-23 17:39:00,360:INFO:Uploading results into container
2025-06-23 17:39:00,362:INFO:Uploading model into container now
2025-06-23 17:39:00,362:INFO:_master_model_container: 2
2025-06-23 17:39:00,363:INFO:_display_container: 2
2025-06-23 17:39:00,363:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-23 17:39:00,363:INFO:create_model() successfully completed......................................
2025-06-23 17:39:00,594:INFO:SubProcess create_model() end ==================================
2025-06-23 17:39:00,594:INFO:Creating metrics dataframe
2025-06-23 17:39:00,598:INFO:Initializing Naive Bayes
2025-06-23 17:39:00,598:INFO:Total runtime is 0.25064355929692583 minutes
2025-06-23 17:39:00,598:INFO:SubProcess create_model() called ==================================
2025-06-23 17:39:00,598:INFO:Initializing create_model()
2025-06-23 17:39:00,598:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:39:00,598:INFO:Checking exceptions
2025-06-23 17:39:00,599:INFO:Importing libraries
2025-06-23 17:39:00,599:INFO:Copying training dataset
2025-06-23 17:39:00,607:INFO:Defining folds
2025-06-23 17:39:00,607:INFO:Declaring metric variables
2025-06-23 17:39:00,607:INFO:Importing untrained model
2025-06-23 17:39:00,608:INFO:Naive Bayes Imported successfully
2025-06-23 17:39:00,608:INFO:Starting cross validation
2025-06-23 17:39:00,612:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:39:01,242:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,244:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,248:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,251:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,254:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,257:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,257:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:01,260:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:01,260:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:01,262:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,264:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,264:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,269:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,273:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,273:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,276:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,277:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,280:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,281:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:01,281:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,283:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,284:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:01,286:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,286:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:01,286:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:01,288:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,288:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,290:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,292:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,297:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,299:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,302:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:01,305:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,307:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,307:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,311:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:01,314:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,314:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,319:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:01,323:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:01,340:INFO:Calculating mean and std
2025-06-23 17:39:01,340:INFO:Creating metrics dataframe
2025-06-23 17:39:01,342:INFO:Uploading results into container
2025-06-23 17:39:01,342:INFO:Uploading model into container now
2025-06-23 17:39:01,344:INFO:_master_model_container: 3
2025-06-23 17:39:01,344:INFO:_display_container: 2
2025-06-23 17:39:01,344:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2025-06-23 17:39:01,344:INFO:create_model() successfully completed......................................
2025-06-23 17:39:01,560:INFO:SubProcess create_model() end ==================================
2025-06-23 17:39:01,561:INFO:Creating metrics dataframe
2025-06-23 17:39:01,564:INFO:Initializing Decision Tree Classifier
2025-06-23 17:39:01,564:INFO:Total runtime is 0.26674195130666095 minutes
2025-06-23 17:39:01,565:INFO:SubProcess create_model() called ==================================
2025-06-23 17:39:01,565:INFO:Initializing create_model()
2025-06-23 17:39:01,565:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:39:01,565:INFO:Checking exceptions
2025-06-23 17:39:01,565:INFO:Importing libraries
2025-06-23 17:39:01,565:INFO:Copying training dataset
2025-06-23 17:39:01,575:INFO:Defining folds
2025-06-23 17:39:01,575:INFO:Declaring metric variables
2025-06-23 17:39:01,576:INFO:Importing untrained model
2025-06-23 17:39:01,576:INFO:Decision Tree Classifier Imported successfully
2025-06-23 17:39:01,577:INFO:Starting cross validation
2025-06-23 17:39:01,581:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:39:02,237:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,239:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,239:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,239:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,241:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,244:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,245:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,245:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,247:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,247:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,248:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,249:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:02,249:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,249:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:02,251:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:02,251:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:02,252:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:02,253:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,253:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,253:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:02,253:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,254:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,254:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:02,256:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,256:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,256:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,258:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,258:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,262:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,262:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,265:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:02,266:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:02,269:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,270:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,277:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,284:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,287:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:02,290:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:02,310:INFO:Calculating mean and std
2025-06-23 17:39:02,312:INFO:Creating metrics dataframe
2025-06-23 17:39:02,314:INFO:Uploading results into container
2025-06-23 17:39:02,315:INFO:Uploading model into container now
2025-06-23 17:39:02,315:INFO:_master_model_container: 4
2025-06-23 17:39:02,315:INFO:_display_container: 2
2025-06-23 17:39:02,316:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6279, splitter='best')
2025-06-23 17:39:02,316:INFO:create_model() successfully completed......................................
2025-06-23 17:39:02,530:INFO:SubProcess create_model() end ==================================
2025-06-23 17:39:02,530:INFO:Creating metrics dataframe
2025-06-23 17:39:02,534:INFO:Initializing SVM - Linear Kernel
2025-06-23 17:39:02,534:INFO:Total runtime is 0.28289635181427 minutes
2025-06-23 17:39:02,535:INFO:SubProcess create_model() called ==================================
2025-06-23 17:39:02,535:INFO:Initializing create_model()
2025-06-23 17:39:02,535:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:39:02,535:INFO:Checking exceptions
2025-06-23 17:39:02,535:INFO:Importing libraries
2025-06-23 17:39:02,535:INFO:Copying training dataset
2025-06-23 17:39:02,543:INFO:Defining folds
2025-06-23 17:39:02,543:INFO:Declaring metric variables
2025-06-23 17:39:02,543:INFO:Importing untrained model
2025-06-23 17:39:02,544:INFO:SVM - Linear Kernel Imported successfully
2025-06-23 17:39:02,544:INFO:Starting cross validation
2025-06-23 17:39:02,547:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:39:03,285:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,291:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,293:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,293:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,297:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,298:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,299:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,302:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,303:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:03,307:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,308:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,309:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,312:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,315:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,316:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,316:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,318:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,320:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,322:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,325:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,326:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,327:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,330:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,332:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,333:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,336:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,338:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,338:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,345:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,346:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,352:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:03,369:INFO:Calculating mean and std
2025-06-23 17:39:03,370:INFO:Creating metrics dataframe
2025-06-23 17:39:03,373:INFO:Uploading results into container
2025-06-23 17:39:03,374:INFO:Uploading model into container now
2025-06-23 17:39:03,374:INFO:_master_model_container: 5
2025-06-23 17:39:03,374:INFO:_display_container: 2
2025-06-23 17:39:03,375:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6279, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2025-06-23 17:39:03,375:INFO:create_model() successfully completed......................................
2025-06-23 17:39:03,588:INFO:SubProcess create_model() end ==================================
2025-06-23 17:39:03,588:INFO:Creating metrics dataframe
2025-06-23 17:39:03,590:INFO:Initializing Ridge Classifier
2025-06-23 17:39:03,592:INFO:Total runtime is 0.3005325078964233 minutes
2025-06-23 17:39:03,592:INFO:SubProcess create_model() called ==================================
2025-06-23 17:39:03,592:INFO:Initializing create_model()
2025-06-23 17:39:03,592:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:39:03,592:INFO:Checking exceptions
2025-06-23 17:39:03,592:INFO:Importing libraries
2025-06-23 17:39:03,592:INFO:Copying training dataset
2025-06-23 17:39:03,600:INFO:Defining folds
2025-06-23 17:39:03,600:INFO:Declaring metric variables
2025-06-23 17:39:03,600:INFO:Importing untrained model
2025-06-23 17:39:03,600:INFO:Ridge Classifier Imported successfully
2025-06-23 17:39:03,602:INFO:Starting cross validation
2025-06-23 17:39:03,604:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:39:04,250:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,252:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,256:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,257:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,258:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,259:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,265:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,266:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,266:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,266:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,268:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,269:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,270:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,273:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,274:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,275:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,276:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,282:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,283:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,284:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,288:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,297:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,304:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,306:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,307:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,313:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,313:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,321:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:04,335:INFO:Calculating mean and std
2025-06-23 17:39:04,337:INFO:Creating metrics dataframe
2025-06-23 17:39:04,339:INFO:Uploading results into container
2025-06-23 17:39:04,339:INFO:Uploading model into container now
2025-06-23 17:39:04,340:INFO:_master_model_container: 6
2025-06-23 17:39:04,340:INFO:_display_container: 2
2025-06-23 17:39:04,340:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6279, solver='auto',
                tol=0.0001)
2025-06-23 17:39:04,340:INFO:create_model() successfully completed......................................
2025-06-23 17:39:04,553:INFO:SubProcess create_model() end ==================================
2025-06-23 17:39:04,553:INFO:Creating metrics dataframe
2025-06-23 17:39:04,557:INFO:Initializing Random Forest Classifier
2025-06-23 17:39:04,557:INFO:Total runtime is 0.3166266481081644 minutes
2025-06-23 17:39:04,557:INFO:SubProcess create_model() called ==================================
2025-06-23 17:39:04,557:INFO:Initializing create_model()
2025-06-23 17:39:04,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:39:04,557:INFO:Checking exceptions
2025-06-23 17:39:04,557:INFO:Importing libraries
2025-06-23 17:39:04,557:INFO:Copying training dataset
2025-06-23 17:39:04,566:INFO:Defining folds
2025-06-23 17:39:04,566:INFO:Declaring metric variables
2025-06-23 17:39:04,566:INFO:Importing untrained model
2025-06-23 17:39:04,567:INFO:Random Forest Classifier Imported successfully
2025-06-23 17:39:04,567:INFO:Starting cross validation
2025-06-23 17:39:04,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:39:05,704:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,715:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,719:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,719:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,719:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,719:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:05,725:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,728:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,728:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,732:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:05,732:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:05,737:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,737:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,737:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,743:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,747:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:05,750:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,753:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,759:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,764:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:05,767:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,781:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,790:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,795:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:05,798:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,827:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,833:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,837:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:05,840:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,857:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,863:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,867:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:05,870:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,889:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,893:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,898:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:05,903:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:05,925:INFO:Calculating mean and std
2025-06-23 17:39:05,926:INFO:Creating metrics dataframe
2025-06-23 17:39:05,929:INFO:Uploading results into container
2025-06-23 17:39:05,929:INFO:Uploading model into container now
2025-06-23 17:39:05,930:INFO:_master_model_container: 7
2025-06-23 17:39:05,930:INFO:_display_container: 2
2025-06-23 17:39:05,930:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6279, verbose=0,
                       warm_start=False)
2025-06-23 17:39:05,930:INFO:create_model() successfully completed......................................
2025-06-23 17:39:06,144:INFO:SubProcess create_model() end ==================================
2025-06-23 17:39:06,144:INFO:Creating metrics dataframe
2025-06-23 17:39:06,147:INFO:Initializing Quadratic Discriminant Analysis
2025-06-23 17:39:06,147:INFO:Total runtime is 0.34311687151590975 minutes
2025-06-23 17:39:06,147:INFO:SubProcess create_model() called ==================================
2025-06-23 17:39:06,147:INFO:Initializing create_model()
2025-06-23 17:39:06,148:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:39:06,148:INFO:Checking exceptions
2025-06-23 17:39:06,148:INFO:Importing libraries
2025-06-23 17:39:06,148:INFO:Copying training dataset
2025-06-23 17:39:06,156:INFO:Defining folds
2025-06-23 17:39:06,156:INFO:Declaring metric variables
2025-06-23 17:39:06,157:INFO:Importing untrained model
2025-06-23 17:39:06,157:INFO:Quadratic Discriminant Analysis Imported successfully
2025-06-23 17:39:06,158:INFO:Starting cross validation
2025-06-23 17:39:06,160:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:39:06,693:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 17:39:06,695:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 17:39:06,706:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 17:39:06,722:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 17:39:06,725:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 17:39:06,725:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 17:39:06,736:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\discriminant_analysis.py:935: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2025-06-23 17:39:06,828:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,832:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,834:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,834:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:06,834:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,839:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,839:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,842:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,842:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,845:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,845:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:06,847:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,847:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,849:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,851:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,851:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,851:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:06,854:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,856:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:06,856:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:06,858:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,858:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,859:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:06,859:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,861:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,861:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,861:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:06,863:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,867:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,867:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,869:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,871:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:06,875:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,875:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,880:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,880:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:06,882:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,886:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,888:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:06,892:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:06,904:INFO:Calculating mean and std
2025-06-23 17:39:06,905:INFO:Creating metrics dataframe
2025-06-23 17:39:06,907:INFO:Uploading results into container
2025-06-23 17:39:06,907:INFO:Uploading model into container now
2025-06-23 17:39:06,907:INFO:_master_model_container: 8
2025-06-23 17:39:06,907:INFO:_display_container: 2
2025-06-23 17:39:06,907:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2025-06-23 17:39:06,907:INFO:create_model() successfully completed......................................
2025-06-23 17:39:07,121:INFO:SubProcess create_model() end ==================================
2025-06-23 17:39:07,121:INFO:Creating metrics dataframe
2025-06-23 17:39:07,124:INFO:Initializing Ada Boost Classifier
2025-06-23 17:39:07,124:INFO:Total runtime is 0.35939579804738353 minutes
2025-06-23 17:39:07,124:INFO:SubProcess create_model() called ==================================
2025-06-23 17:39:07,124:INFO:Initializing create_model()
2025-06-23 17:39:07,124:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:39:07,124:INFO:Checking exceptions
2025-06-23 17:39:07,124:INFO:Importing libraries
2025-06-23 17:39:07,124:INFO:Copying training dataset
2025-06-23 17:39:07,132:INFO:Defining folds
2025-06-23 17:39:07,132:INFO:Declaring metric variables
2025-06-23 17:39:07,132:INFO:Importing untrained model
2025-06-23 17:39:07,132:INFO:Ada Boost Classifier Imported successfully
2025-06-23 17:39:07,132:INFO:Starting cross validation
2025-06-23 17:39:07,132:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:39:07,652:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 17:39:07,652:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 17:39:07,652:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 17:39:07,652:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 17:39:07,666:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 17:39:07,675:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 17:39:07,684:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 17:39:07,689:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 17:39:07,695:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 17:39:07,701:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2025-06-23 17:39:07,793:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,793:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,795:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,795:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,802:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,804:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,804:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:07,804:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,804:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,808:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,808:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,808:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:07,808:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,810:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,810:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:07,811:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:07,814:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:07,814:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,817:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,817:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,817:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,822:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:07,826:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,826:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,826:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,832:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,833:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,834:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,834:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,834:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:07,834:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,834:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:07,834:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,842:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,844:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,844:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,849:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:07,852:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:07,864:INFO:Calculating mean and std
2025-06-23 17:39:07,865:INFO:Creating metrics dataframe
2025-06-23 17:39:07,865:INFO:Uploading results into container
2025-06-23 17:39:07,865:INFO:Uploading model into container now
2025-06-23 17:39:07,865:INFO:_master_model_container: 9
2025-06-23 17:39:07,865:INFO:_display_container: 2
2025-06-23 17:39:07,865:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6279)
2025-06-23 17:39:07,865:INFO:create_model() successfully completed......................................
2025-06-23 17:39:08,081:INFO:SubProcess create_model() end ==================================
2025-06-23 17:39:08,081:INFO:Creating metrics dataframe
2025-06-23 17:39:08,087:INFO:Initializing Gradient Boosting Classifier
2025-06-23 17:39:08,087:INFO:Total runtime is 0.37544474999109895 minutes
2025-06-23 17:39:08,087:INFO:SubProcess create_model() called ==================================
2025-06-23 17:39:08,087:INFO:Initializing create_model()
2025-06-23 17:39:08,087:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:39:08,087:INFO:Checking exceptions
2025-06-23 17:39:08,087:INFO:Importing libraries
2025-06-23 17:39:08,087:INFO:Copying training dataset
2025-06-23 17:39:08,092:INFO:Defining folds
2025-06-23 17:39:08,092:INFO:Declaring metric variables
2025-06-23 17:39:08,092:INFO:Importing untrained model
2025-06-23 17:39:08,092:INFO:Gradient Boosting Classifier Imported successfully
2025-06-23 17:39:08,092:INFO:Starting cross validation
2025-06-23 17:39:08,092:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:39:09,223:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,224:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,230:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,230:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,233:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,234:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:09,237:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:09,237:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,238:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,240:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,242:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:09,247:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,256:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,263:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,264:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,268:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,268:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:09,270:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,270:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,272:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,273:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:09,275:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,275:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,275:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,278:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:09,279:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:09,281:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,283:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,288:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,297:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,299:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:09,302:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,312:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,317:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,319:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,320:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:09,324:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,325:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,327:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:09,331:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:09,344:INFO:Calculating mean and std
2025-06-23 17:39:09,345:INFO:Creating metrics dataframe
2025-06-23 17:39:09,347:INFO:Uploading results into container
2025-06-23 17:39:09,348:INFO:Uploading model into container now
2025-06-23 17:39:09,348:INFO:_master_model_container: 10
2025-06-23 17:39:09,348:INFO:_display_container: 2
2025-06-23 17:39:09,348:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6279, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2025-06-23 17:39:09,348:INFO:create_model() successfully completed......................................
2025-06-23 17:39:09,563:INFO:SubProcess create_model() end ==================================
2025-06-23 17:39:09,563:INFO:Creating metrics dataframe
2025-06-23 17:39:09,567:INFO:Initializing Linear Discriminant Analysis
2025-06-23 17:39:09,567:INFO:Total runtime is 0.4001187562942504 minutes
2025-06-23 17:39:09,567:INFO:SubProcess create_model() called ==================================
2025-06-23 17:39:09,568:INFO:Initializing create_model()
2025-06-23 17:39:09,568:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:39:09,568:INFO:Checking exceptions
2025-06-23 17:39:09,568:INFO:Importing libraries
2025-06-23 17:39:09,568:INFO:Copying training dataset
2025-06-23 17:39:09,575:INFO:Defining folds
2025-06-23 17:39:09,576:INFO:Declaring metric variables
2025-06-23 17:39:09,576:INFO:Importing untrained model
2025-06-23 17:39:09,577:INFO:Linear Discriminant Analysis Imported successfully
2025-06-23 17:39:09,577:INFO:Starting cross validation
2025-06-23 17:39:09,582:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:39:10,260:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,264:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,269:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,270:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,271:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,273:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:10,273:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,274:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,276:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,276:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:10,276:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,277:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:10,280:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,280:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:10,280:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,281:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,282:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,283:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,284:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:10,289:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,292:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,297:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:10,299:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,300:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,301:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,305:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,306:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,307:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,307:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,311:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,311:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:10,314:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,314:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,316:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:10,316:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,318:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:10,319:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,323:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:10,342:INFO:Calculating mean and std
2025-06-23 17:39:10,343:INFO:Creating metrics dataframe
2025-06-23 17:39:10,346:INFO:Uploading results into container
2025-06-23 17:39:10,346:INFO:Uploading model into container now
2025-06-23 17:39:10,347:INFO:_master_model_container: 11
2025-06-23 17:39:10,347:INFO:_display_container: 2
2025-06-23 17:39:10,347:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2025-06-23 17:39:10,347:INFO:create_model() successfully completed......................................
2025-06-23 17:39:10,577:INFO:SubProcess create_model() end ==================================
2025-06-23 17:39:10,577:INFO:Creating metrics dataframe
2025-06-23 17:39:10,580:INFO:Initializing Extra Trees Classifier
2025-06-23 17:39:10,580:INFO:Total runtime is 0.4170027534166971 minutes
2025-06-23 17:39:10,580:INFO:SubProcess create_model() called ==================================
2025-06-23 17:39:10,580:INFO:Initializing create_model()
2025-06-23 17:39:10,581:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:39:10,581:INFO:Checking exceptions
2025-06-23 17:39:10,581:INFO:Importing libraries
2025-06-23 17:39:10,581:INFO:Copying training dataset
2025-06-23 17:39:10,589:INFO:Defining folds
2025-06-23 17:39:10,589:INFO:Declaring metric variables
2025-06-23 17:39:10,590:INFO:Importing untrained model
2025-06-23 17:39:10,591:INFO:Extra Trees Classifier Imported successfully
2025-06-23 17:39:10,591:INFO:Starting cross validation
2025-06-23 17:39:10,594:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:39:11,639:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,643:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,647:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,652:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,654:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,655:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,656:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,663:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,665:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,665:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,674:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,674:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,686:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,688:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,695:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,697:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,700:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,700:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,706:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,706:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,712:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,717:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,725:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,730:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,734:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,739:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,746:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,791:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,797:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,802:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:11,813:INFO:Calculating mean and std
2025-06-23 17:39:11,813:INFO:Creating metrics dataframe
2025-06-23 17:39:11,816:INFO:Uploading results into container
2025-06-23 17:39:11,816:INFO:Uploading model into container now
2025-06-23 17:39:11,817:INFO:_master_model_container: 12
2025-06-23 17:39:11,817:INFO:_display_container: 2
2025-06-23 17:39:11,817:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6279, verbose=0,
                     warm_start=False)
2025-06-23 17:39:11,818:INFO:create_model() successfully completed......................................
2025-06-23 17:39:12,041:INFO:SubProcess create_model() end ==================================
2025-06-23 17:39:12,041:INFO:Creating metrics dataframe
2025-06-23 17:39:12,045:INFO:Initializing Extreme Gradient Boosting
2025-06-23 17:39:12,045:INFO:Total runtime is 0.44141341050465893 minutes
2025-06-23 17:39:12,045:INFO:SubProcess create_model() called ==================================
2025-06-23 17:39:12,046:INFO:Initializing create_model()
2025-06-23 17:39:12,046:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:39:12,046:INFO:Checking exceptions
2025-06-23 17:39:12,046:INFO:Importing libraries
2025-06-23 17:39:12,046:INFO:Copying training dataset
2025-06-23 17:39:12,054:INFO:Defining folds
2025-06-23 17:39:12,054:INFO:Declaring metric variables
2025-06-23 17:39:12,054:INFO:Importing untrained model
2025-06-23 17:39:12,085:INFO:Extreme Gradient Boosting Imported successfully
2025-06-23 17:39:12,085:INFO:Starting cross validation
2025-06-23 17:39:12,089:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:39:18,531:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,539:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,543:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:18,547:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,627:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,638:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,642:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:18,645:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,683:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,688:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,695:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,697:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,699:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:18,700:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:18,704:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,705:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,806:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,815:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,819:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:18,823:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,836:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,845:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,850:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:18,853:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,892:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,902:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,906:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:18,910:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,938:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,946:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:18,951:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:18,953:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:19,046:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:19,059:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:19,062:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:19,067:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:19,094:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:19,110:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:19,114:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:19,120:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:21,392:INFO:Calculating mean and std
2025-06-23 17:39:21,392:INFO:Creating metrics dataframe
2025-06-23 17:39:21,396:INFO:Uploading results into container
2025-06-23 17:39:21,397:INFO:Uploading model into container now
2025-06-23 17:39:21,397:INFO:_master_model_container: 13
2025-06-23 17:39:21,397:INFO:_display_container: 2
2025-06-23 17:39:21,399:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              feature_weights=None, gamma=None, grow_policy=None,
              importance_type=None, interaction_constraints=None,
              learning_rate=None, max_bin=None, max_cat_threshold=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, multi_strategy=None, n_estimators=None,
              n_jobs=-1, num_parallel_tree=None, ...)
2025-06-23 17:39:21,399:INFO:create_model() successfully completed......................................
2025-06-23 17:39:21,696:INFO:SubProcess create_model() end ==================================
2025-06-23 17:39:21,696:INFO:Creating metrics dataframe
2025-06-23 17:39:21,701:INFO:Initializing Light Gradient Boosting Machine
2025-06-23 17:39:21,701:INFO:Total runtime is 0.6023594379425048 minutes
2025-06-23 17:39:21,701:INFO:SubProcess create_model() called ==================================
2025-06-23 17:39:21,701:INFO:Initializing create_model()
2025-06-23 17:39:21,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:39:21,701:INFO:Checking exceptions
2025-06-23 17:39:21,701:INFO:Importing libraries
2025-06-23 17:39:21,703:INFO:Copying training dataset
2025-06-23 17:39:21,708:INFO:Defining folds
2025-06-23 17:39:21,708:INFO:Declaring metric variables
2025-06-23 17:39:21,708:INFO:Importing untrained model
2025-06-23 17:39:21,708:INFO:Light Gradient Boosting Machine Imported successfully
2025-06-23 17:39:21,708:INFO:Starting cross validation
2025-06-23 17:39:21,719:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:39:23,665:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,674:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,677:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:23,681:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,744:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,760:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,772:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,783:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,791:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:23,804:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:23,808:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,812:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,864:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,888:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,897:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:23,911:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,915:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,922:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,938:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,943:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,953:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:23,955:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:23,961:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:23,961:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:24,113:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:24,121:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:24,126:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:24,130:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:27,826:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:27,830:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:27,832:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:27,834:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:27,836:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:27,836:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:27,838:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:27,840:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:27,842:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:27,847:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:27,849:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:27,860:INFO:Calculating mean and std
2025-06-23 17:39:27,860:INFO:Creating metrics dataframe
2025-06-23 17:39:27,864:INFO:Uploading results into container
2025-06-23 17:39:27,864:INFO:Uploading model into container now
2025-06-23 17:39:27,864:INFO:_master_model_container: 14
2025-06-23 17:39:27,864:INFO:_display_container: 2
2025-06-23 17:39:27,866:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6279, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2025-06-23 17:39:27,866:INFO:create_model() successfully completed......................................
2025-06-23 17:39:28,101:INFO:SubProcess create_model() end ==================================
2025-06-23 17:39:28,121:INFO:Creating metrics dataframe
2025-06-23 17:39:28,127:INFO:Initializing CatBoost Classifier
2025-06-23 17:39:28,127:INFO:Total runtime is 0.7094479362169901 minutes
2025-06-23 17:39:28,127:INFO:SubProcess create_model() called ==================================
2025-06-23 17:39:28,127:INFO:Initializing create_model()
2025-06-23 17:39:28,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=catboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:39:28,127:INFO:Checking exceptions
2025-06-23 17:39:28,127:INFO:Importing libraries
2025-06-23 17:39:28,127:INFO:Copying training dataset
2025-06-23 17:39:28,137:INFO:Defining folds
2025-06-23 17:39:28,137:INFO:Declaring metric variables
2025-06-23 17:39:28,137:INFO:Importing untrained model
2025-06-23 17:39:28,137:INFO:CatBoost Classifier Imported successfully
2025-06-23 17:39:28,137:INFO:Starting cross validation
2025-06-23 17:39:28,137:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:39:40,344:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,352:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,357:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,365:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

ier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:40,369:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,372:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:40,377:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,674:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,678:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,682:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:40,682:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,688:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,690:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,692:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:40,699:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,711:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,717:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,721:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:40,723:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,767:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,771:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,773:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:40,776:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,829:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,833:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,837:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:40,840:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,862:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,868:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:40,869:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:40,874:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:43,838:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:43,841:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:43,841:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:43,841:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:43,845:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:43,851:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:43,853:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:43,856:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:43,876:INFO:Calculating mean and std
2025-06-23 17:39:43,876:INFO:Creating metrics dataframe
2025-06-23 17:39:43,879:INFO:Uploading results into container
2025-06-23 17:39:43,881:INFO:Uploading model into container now
2025-06-23 17:39:43,881:INFO:_master_model_container: 15
2025-06-23 17:39:43,881:INFO:_display_container: 2
2025-06-23 17:39:43,881:INFO:<catboost.core.CatBoostClassifier object at 0x000001BDDA28BA90>
2025-06-23 17:39:43,881:INFO:create_model() successfully completed......................................
2025-06-23 17:39:44,079:INFO:SubProcess create_model() end ==================================
2025-06-23 17:39:44,079:INFO:Creating metrics dataframe
2025-06-23 17:39:44,083:INFO:Initializing Dummy Classifier
2025-06-23 17:39:44,083:INFO:Total runtime is 0.9753793835639952 minutes
2025-06-23 17:39:44,083:INFO:SubProcess create_model() called ==================================
2025-06-23 17:39:44,083:INFO:Initializing create_model()
2025-06-23 17:39:44,083:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001BDDA345750>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:39:44,083:INFO:Checking exceptions
2025-06-23 17:39:44,083:INFO:Importing libraries
2025-06-23 17:39:44,083:INFO:Copying training dataset
2025-06-23 17:39:44,088:INFO:Defining folds
2025-06-23 17:39:44,088:INFO:Declaring metric variables
2025-06-23 17:39:44,088:INFO:Importing untrained model
2025-06-23 17:39:44,088:INFO:Dummy Classifier Imported successfully
2025-06-23 17:39:44,088:INFO:Starting cross validation
2025-06-23 17:39:44,091:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2025-06-23 17:39:44,504:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,510:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,510:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,510:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,512:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:44,514:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,517:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,517:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,517:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,519:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:44,521:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:44,521:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,521:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,523:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,523:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,525:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,525:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:44,525:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,527:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:44,527:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,529:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,529:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,529:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,533:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:44,535:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,535:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,539:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:44,541:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,541:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,543:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,544:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,546:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:44,548:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,550:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,551:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:44,553:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,553:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,556:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,558:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2025-06-23 17:39:44,561:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2025-06-23 17:39:44,577:INFO:Calculating mean and std
2025-06-23 17:39:44,578:INFO:Creating metrics dataframe
2025-06-23 17:39:44,578:INFO:Uploading results into container
2025-06-23 17:39:44,578:INFO:Uploading model into container now
2025-06-23 17:39:44,581:INFO:_master_model_container: 16
2025-06-23 17:39:44,581:INFO:_display_container: 2
2025-06-23 17:39:44,581:INFO:DummyClassifier(constant=None, random_state=6279, strategy='prior')
2025-06-23 17:39:44,581:INFO:create_model() successfully completed......................................
2025-06-23 17:39:44,761:INFO:SubProcess create_model() end ==================================
2025-06-23 17:39:44,761:INFO:Creating metrics dataframe
2025-06-23 17:39:44,764:INFO:Initializing create_model()
2025-06-23 17:39:44,764:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2025-06-23 17:39:44,764:INFO:Checking exceptions
2025-06-23 17:39:44,767:INFO:Importing libraries
2025-06-23 17:39:44,767:INFO:Copying training dataset
2025-06-23 17:39:44,768:INFO:Defining folds
2025-06-23 17:39:44,768:INFO:Declaring metric variables
2025-06-23 17:39:44,768:INFO:Importing untrained model
2025-06-23 17:39:44,768:INFO:Declaring custom model
2025-06-23 17:39:44,768:INFO:K Neighbors Classifier Imported successfully
2025-06-23 17:39:44,772:INFO:Cross validation set to False
2025-06-23 17:39:44,772:INFO:Fitting Model
2025-06-23 17:39:44,937:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-23 17:39:44,937:INFO:create_model() successfully completed......................................
2025-06-23 17:39:45,130:INFO:_master_model_container: 16
2025-06-23 17:39:45,130:INFO:_display_container: 2
2025-06-23 17:39:45,130:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2025-06-23 17:39:45,130:INFO:compare_models() successfully completed......................................
2025-06-23 17:39:45,134:INFO:Initializing predict_model()
2025-06-23 17:39:45,134:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001BD92868DF0>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001BD92871630>)
2025-06-23 17:39:45,134:INFO:Checking exceptions
2025-06-23 17:39:45,134:INFO:Preloading libraries
2025-06-23 17:39:45,504:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-06-23 17:39:45,518:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-06-23 17:39:45,528:WARNING:C:\Users\taish\OneDrive\Documents\mypythonprojects\venv310\lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Yes') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.

2025-06-23 17:39:45,819:INFO:Initializing save_model()
2025-06-23 17:39:45,819:INFO:save_model(model=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\taish\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SeniorCitizen', 'tenure',
                                             'MonthlyCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              f...
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['customerID', 'TotalCharges'],
                                    transformer=TargetEncoder(cols=['customerID',
                                                                    'TotalCharges'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2025-06-23 17:39:45,819:INFO:Adding model into prep_pipe
2025-06-23 17:39:45,841:INFO:best_model.pkl saved in current working directory
2025-06-23 17:39:45,889:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['SeniorCitizen', 'tenure',
                                             'MonthlyCharges'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False...
                                    transformer=TargetEncoder(cols=['customerID',
                                                                    'TotalCharges'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('trained_model',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2025-06-23 17:39:45,889:INFO:save_model() successfully completed......................................
2025-06-26 15:45:10,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 15:45:10,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 15:45:10,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 15:45:10,990:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 15:49:33,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 15:49:33,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 15:49:33,511:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 15:49:33,512:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 17:45:41,580:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 17:45:41,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 17:45:41,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2025-06-26 17:45:41,611:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
